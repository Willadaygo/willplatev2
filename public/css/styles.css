/*------------------------------------*    #PULLING IN CONTENTS
\*------------------------------------*/
/**
 * #SETTINGS
 */
/*!
 * willplate, by Will Russell
 *
 */
/*------------------------------------*  #GLOBAL
\*------------------------------------*/
/*------------------------------------*  #DEFAULTS
\*------------------------------------*/
/*------------------------------------*   #SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * #TOOLS
 */
/*------------------------------------*    #FUNCTIONS
\*------------------------------------*/
/*  #Font face mixin
--------------------------------------*/
/*  #Responsive breakpoints mixin
--------------------------------------*/
/*  #Size helper
--------------------------------------*/
/*  #placeholder helper
--------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

ul, ol {
  padding-left: 1.5rem; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre,
.l-margin-top {
  margin-top: 1.5rem; }

/**
 * #BASE
 */
@font-face {
  font-family: Mercury-Text-G3-Roman;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/Mercury-Text-G3-Roman.otf") format("opentype"); }

@font-face {
  font-family: FaktPro-Blond;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/FaktPro-Blond.otf") format("opentype"); }

@font-face {
  font-family: FaktPro-Medium;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/FaktPro-Medium.otf") format("opentype"); }

html {
  font-size: 1em;
  line-height: 1.5;
  background-color: white;
  color: black;
  overflow-y: scroll;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility; }

body {
  font-family: "FaktPro-Blond", "aktiv-grotesk-std", sans-serif;
  font-weight: 400; }

/*  #Headings
--------------------------------------*/
h1, .t-alpha,
h2, .t-beta,
h3, .t-gamma,
h4, .t-delta,
h5, .t-epsilon,
h6, .t-zeta,
.t-lede {
  font-family: "Mercury-Text-G3-Roman", sans-serif;
  font-weight: 400; }

h1, .t-alpha {
  font-size: 2.25rem;
  line-height: 3rem;
  letter-spacing: -0.01em; }

h2, .t-beta {
  font-size: 1.375rem;
  line-height: 1.75rem;
  letter-spacing: -0.01em; }

.t-lede {
  font-size: 2.875rem;
  line-height: 3.5rem;
  letter-spacing: -0.005em; }

strong, b, em, dt {
  font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif;
  font-weight: normal; }

/*------------------------------------*    #LINKS
\*------------------------------------*/
a {
  color: inherit;
  -webkit-transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  a,
  a:hover,
  a:active,
  a:focus {
    text-decoration: none; }

p a {
  color: black;
  text-decoration: none;
  border-bottom: 0.0625rem solid black; }
  p a:hover,
  p a:active,
  p a:focus {
    border-bottom: 0.1875rem solid #0014b4; }

.t-lede a {
  font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif;
  font-size: 2.75rem;
  letter-spacing: -0.01em;
  border: none !important;
  -webkit-transition: none;
          transition: none;
  /**
  * Layers multple text-shadows on top of 
  * each other steching outwards horizontally.
  **/
  text-shadow: 0 -0.03125em white, 0 0.03125em white, 0.03125em 0 white, -0.03125em 0 white, 0.0625em 0 white, -0.0625em 0 white, 0.09375em 0 white, -0.09375em 0 white, 0.125em 0 white, -0.125em 0 white;
  background-color: transparent;
  background-image: -webkit-linear-gradient(black, black), -webkit-linear-gradient(black, black), -webkit-linear-gradient(black, black);
  background-image: linear-gradient(black, black), linear-gradient(black, black), linear-gradient(black, black);
  /**
  * Use ems instead of pixel if you want 
  * the underline height to be responsive 
  * to font-size.
  **/
  background-size: 0.05em 0.0625rem, 0.05em 0.0625rem, 0.0625rem 0.0625rem;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 88%, 100% 88%, 0% 88%; }
  .lt-ie9 .t-lede a {
    background-image: none;
    text-decoration: underline; }
  .t-lede a:hover {
    border: none !important;
    background-image: -webkit-linear-gradient(#0014b4, #0014b4), -webkit-linear-gradient(#0014b4, #0014b4), -webkit-linear-gradient(#0014b4, #0014b4);
    background-image: linear-gradient(#0014b4, #0014b4), linear-gradient(#0014b4, #0014b4), linear-gradient(#0014b4, #0014b4);
    background-size: 0.05em 0.25rem, 0.05em 0.25rem, 0.25rem 0.25rem;
    background-position: 0% 96%, 100% 96%, 0% 96%; }

.link-secret {
  color: inherit; }
  .link-secret,
  .link-secret:hover,
  .link-secret:active,
  .link-secret:focus {
    color: black;
    text-decoration: none; }

::-moz-selection {
  text-shadow: none;
  background: #0014b4;
  color: #fff; }

::selection {
  text-shadow: none;
  background: #0014b4;
  color: #fff; }

/*------------------------------------*    #GRID
\*------------------------------------*/
.grid {
  list-style: none;
  margin: 10px 0 0 -10px;
  padding: 0;
  text-align: left;
  font-size: 0; }
  @media screen and (min-width: 30em) {
    .grid {
      margin-top: 0; }
      .grid:first-child [class*="col--"] {
        margin-top: 0; }
      .grid.grid--noMargins {
        margin: 10px 0 0 0; } }

[class*="col--"] {
  display: inline-block;
  margin-top: 10px;
  padding-left: 10px;
  vertical-align: top;
  width: 100%;
  font-size: medium;
  font-size: initial;
  text-align: left; }
  [class*="col--"] img {
    width: 100%; }
  .grid--noMargins > [class*="col--"] {
    margin-top: 0; }
  @media screen and (min-width: 30em) {
    .grid--noMargins > [class*="col--"] {
      margin-top: 0;
      padding-left: 0; } }

@media screen and (min-width: 30em) {
  .col--1 {
    width: 8.33333%; } }

@media screen and (min-width: 30em) {
  .col--2 {
    width: 16.66667%; } }

@media screen and (min-width: 30em) {
  .col--3 {
    width: 25%; } }

@media screen and (min-width: 30em) {
  .col--4 {
    width: 33.33333%; } }

@media screen and (min-width: 30em) {
  .col--5 {
    width: 41.66667%; } }

@media screen and (min-width: 30em) {
  .col--6 {
    width: 50%; } }

@media screen and (min-width: 30em) {
  .col--7 {
    width: 58.33333%; } }

@media screen and (min-width: 30em) {
  .col--8 {
    width: 66.66667%; } }

@media screen and (min-width: 30em) {
  .col--9 {
    width: 75%; } }

@media screen and (min-width: 30em) {
  .col--10 {
    width: 83.33333%; } }

@media screen and (min-width: 30em) {
  .col--11 {
    width: 91.66667%; } }

@media screen and (min-width: 30em) {
  .col--12 {
    width: 100%; } }

@media screen and (min-width: 30em) {
  .col--fix1 {
    width: 6.30208rem; } }

@media screen and (min-width: 30em) {
  .col--fix2 {
    width: 12.60417rem; } }

@media screen and (min-width: 30em) {
  .col--fix3 {
    width: 18.90625rem; } }

@media screen and (min-width: 30em) {
  .col--fix4 {
    width: 25.20833rem; } }

@media screen and (min-width: 30em) {
  .col--fix5 {
    width: 31.51042rem; } }

@media screen and (min-width: 30em) {
  .col--fix6 {
    width: 37.8125rem; } }

@media screen and (min-width: 30em) {
  .col--fix7 {
    width: 44.11458rem; } }

@media screen and (min-width: 30em) {
  .col--fix8 {
    width: 50.41667rem; } }

@media screen and (min-width: 30em) {
  .col--fix9 {
    width: 56.71875rem; } }

@media screen and (min-width: 30em) {
  .col--fix10 {
    width: 63.02083rem; } }

@media screen and (min-width: 30em) {
  .col--fix11 {
    width: 69.32292rem; } }

@media screen and (min-width: 30em) {
  .col--fix12 {
    width: 75.625rem; } }

.col--stack {
  width: 100%; }
  @media screen and (min-width: 30em) {
    .col--stack {
      width: 50%; } }
  @media screen and (min-width: 50em) {
    .col--stack {
      width: 33.333333%; } }

.grid--full {
  margin-left: 0; }
  .grid--full > [class*="col--"] {
    padding-left: 0; }

.grid--rev {
  direction: rtl;
  text-align: left; }
  .grid--rev > [class*="col--"] {
    direction: ltr;
    text-align: left; }

.grid--middle > [class*="col--"] {
  vertical-align: middle; }

.grid--bottom > [class*="col--"] {
  vertical-align: bottom; }

.grid--right {
  text-align: right; }
  .grid--right > [class*="col--"] {
    text-align: left; }

.grid--center {
  text-align: center; }
  .grid--center > [class*="col--"] {
    text-align: left; }

/**
 * #OBJECTS
 */
/*------------------------------------*  #WRAPPERS
\*------------------------------------*/
.wrapper {
  max-width: 80em;
  margin: 0 auto;
  padding-right: 1.25rem;
  padding-left: 1.25rem; }
  @media screen and (min-width: 50em) {
    .wrapper {
      padding-right: 2.5rem;
      padding-left: 2.5rem; } }

/*------------------------------------*  #BUTTONS
\*------------------------------------*/
/**
 * #COMPONENTS
 */
/*------------------------------------*  #HEADER
\*------------------------------------*/
.ocn-switch {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  width: 5rem;
  height: 5rem;
  background: #0014b4;
  z-index: 100;
  -webkit-transition: .2s ease;
          transition: .2s ease; }
  .ocn-show-right .ocn-switch {
    background: black; }

.ocn {
  background: #0014b4; }
  @media screen and (min-width: 50em) {
    .ocn {
      background: none; } }
  .ocn ul {
    margin: 0;
    padding: 0;
    list-style: none;
    font-size: 0; }
  .ocn li {
    font-size: medium;
    font-size: initial; }

.ocn__list__item {
  -webkit-transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  @media screen and (min-width: 50em) {
    .ocn__list__item {
      display: inline-block;
      padding: 0 1.875rem;
      border-bottom: 0.0625rem solid black; }
      .ocn__list__item.is--active {
        border-bottom: 0.25rem solid #0014b4; } }

.ocn__list a {
  display: block;
  width: 100%;
  padding: 1.875rem; }

@media screen and (max-width: 49.9375em) {
  .ocn-switch {
    display: block; }
  .ocn {
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left: auto;
    right: auto;
    overflow: auto; }
  .site__inner,
  .ocn {
    -webkit-transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
            transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  .ocn {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    -webkit-transform: translateZ(0);
            transform: translateZ(0);
    z-index: 1; }
  .site__inner {
    opacity: 1; }
  .ocn {
    right: 0;
    width: 100%;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  .ocn__list {
    -webkit-transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
            transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .ocn-show-right .site__inner {
    -webkit-transform: translate3d(-50%, 0, 0);
            transform: translate3d(-50%, 0, 0); }
  .ocn-show-right .ocn {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .ocn-show-right .ocn__list {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .is--visible {
    display: block; } }

.switch-trans {
  -webkit-transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 0.2s cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  .switch-trans.switch-trans-in {
    opacity: 0;
    -webkit-transform: translate3d(5%, 0, 0);
            transform: translate3d(5%, 0, 0); }
    .switch-trans.switch-trans-in.switch-trans-out {
      opacity: 1;
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); }

/**
 * #THEMES
 */
.styleguide {
  margin-top: 5rem;
  margin-bottom: 6.25rem; }
  .styleguide hr {
    border-top: 1px solid black; }
  .styleguide .sg-subheading {
    margin-top: 0;
    font-size: 30px; }
  .styleguide .sg-title {
    font-size: 18px;
    line-height: 26px;
    color: #0014b4;
    border-bottom: 1px solid #b2b2b2;
    margin-top: 6.25rem; }

.palette {
  margin: 1.875rem 0 0;
  padding: 0; }

.palette__item {
  display: inline-block;
  margin: 0 2%; }

.palette__circle {
  display: block;
  width: 9.375rem;
  height: 9.375rem;
  border-radius: 50%; }
  .palette__circle--border {
    border: 0.0625rem solid #b2b2b2; }

.palette__title {
  display: block; }

/**
 * #TRUMPS
 */
/*------------------------------------*    #SHOW-HIDE
\*------------------------------------*/
@media screen and (min-width: 30em) {
  .h-small-up {
    display: none !important; } }

@media screen and (min-width: 50em) {
  .h-med-up {
    display: none !important; } }

@media screen and (min-width: 80em) {
  .h-large-up {
    display: none; } }

@media screen and (max-width: 29.9375em) {
  .h-small-down {
    display: none !important; } }

@media screen and (max-width: 49.9375em) {
  .h-med-down {
    display: none !important; } }

@media screen and (max-width: 79.9375em) {
  .h-large-down {
    display: none; } }

.l-blue {
  background-color: #0014b4 !important; }

.l-blue--hover:hover {
  background-color: #0014b4 !important; }

.t-blue {
  color: #0014b4 !important; }

.t-blue--hover:hover {
  color: #0014b4 !important; }

.f-blue svg {
  fill: #0014b4 !important; }

.f-blue--hover:hover svg {
  fill: #0014b4 !important; }

.l-white {
  background-color: white !important; }

.l-white--hover:hover {
  background-color: white !important; }

.t-white {
  color: white !important; }

.t-white--hover:hover {
  color: white !important; }

.f-white svg {
  fill: white !important; }

.f-white--hover:hover svg {
  fill: white !important; }

.l-grey {
  background-color: #b2b2b2 !important; }

.l-grey--hover:hover {
  background-color: #b2b2b2 !important; }

.t-grey {
  color: #b2b2b2 !important; }

.t-grey--hover:hover {
  color: #b2b2b2 !important; }

.f-grey svg {
  fill: #b2b2b2 !important; }

.f-grey--hover:hover svg {
  fill: #b2b2b2 !important; }

.l-black {
  background-color: black !important; }

.l-black--hover:hover {
  background-color: black !important; }

.t-black {
  color: black !important; }

.t-black--hover:hover {
  color: black !important; }

.f-black svg {
  fill: black !important; }

.f-black--hover:hover svg {
  fill: black !important; }

.t-align-center {
  text-align: center; }

.l-center {
  margin-left: auto;
  margin-right: auto; }

.l-clear {
  clear: both; }

.l-cf, .palette {
  *zoom: 1; }
  .l-cf:before, .palette:before, .l-cf:after, .palette:after {
    content: " ";
    display: table; }
  .l-cf:after, .palette:after {
    clear: both; }

.l-padding {
  padding: 1.5rem; }

.l-margin-top {
  margin-top: 1.5rem !important; }

.l-margin-top--none {
  margin-top: 0 !important; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlcy5zY3NzIiwiMDAtc2V0dGluZ3MvX3NldHRpbmdzLmdsb2JhbC5zY3NzIiwiMDAtc2V0dGluZ3MvX3NldHRpbmdzLmRlZmF1bHRzLnNjc3MiLCIwMC1zZXR0aW5ncy9fc2V0dGluZ3MucmVzcG9uc2l2ZS5zY3NzIiwiMDEtdG9vbHMvX3Rvb2xzLmZ1bmN0aW9ucy5zY3NzIiwiMDEtdG9vbHMvX3Rvb2xzLm1peGlucy5zY3NzIiwiMDItZ2VuZXJpYy9fZ2VuZXJpYy5ub3JtYWxpemUuc2NzcyIsInN0eWxlcy5jc3MiLCIwMi1nZW5lcmljL19nZW5lcmljLnJlc2V0LnNjc3MiLCIwMi1nZW5lcmljL19nZW5lcmljLmJveC1zaXppbmcuc2NzcyIsIjAyLWdlbmVyaWMvX2dlbmVyaWMuc2hhcmVkLnNjc3MiLCIwMy1iYXNlL19iYXNlLnBhZ2Uuc2NzcyIsIjAwLXNldHRpbmdzL19zZXR0aW5ncy5jb2xvcnMuc2NzcyIsIjAzLWJhc2UvX2Jhc2UudHlwZS5zY3NzIiwiMDMtYmFzZS9fYmFzZS5saW5rcy5zY3NzIiwiMDMtYmFzZS9fYmFzZS5ncmlkLnNjc3MiLCIwNC1vYmplY3RzL19vYmplY3RzLndyYXBwZXJzLnNjc3MiLCIwNC1vYmplY3RzL19vYmplY3RzLmJ1dHRvbnMuc2NzcyIsIjA1LWNvbXBvbmVudHMvX2NvbXBvbmVudHMuaGVhZGVyLnNjc3MiLCIwNi10aGVtZXMvX3RoZW1lcy5zdHlsZWd1aWRlLnNjc3MiLCIwNy10cnVtcHMvX3RydW1wcy5zaG93LWhpZGUuc2NzcyIsIjA3LXRydW1wcy9fdHJ1bXBzLmhlbHBlcnMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTt3Q0FFd0M7QUFFeEM7O0dBRUc7QUNOSDs7O0dBR0c7QUFFSDt3Q0FFd0M7QUNQeEM7d0NBRXdDO0FDRnhDO3dDQUV3QztBSGF4Qzs7R0FFRztBSWpCSDt3Q0FFd0M7QUNFeEM7d0NBQ3dDO0FBZXhDO3dDQUN3QztBQWN4Qzt3Q0FDd0M7QUFReEM7d0NBQ3dD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RUFDM0Isd0JBQXdCLEVBQXpCOztBQUE0QjtFQUMzQix1QkFBdUIsRUFBeEI7O0FBQTJCO0VBQzFCLHVCQUF1QixFQUF4Qjs7QUFOZ0M7RUFDL0IscUNBQW1DLEVBQXBDOztBQUF1QztFQUN0QyxxQ0FBbUMsRUFBcEM7O0FBQXVDO0VBQ3RDLDBCQUF3QixFQUF6Qjs7QUFBNEI7RUFDM0IsMEJBQXdCLEVBQXpCOztBQUE0QjtFQUMzQix5QkFBdUIsRUFBeEI7O0FBQTJCO0VBQzFCLHlCQUF1QixFQUF4Qjs7QUFOZ0M7RUFDL0IsbUNBQW1DLEVBQXBDOztBQUF1QztFQUN0QyxtQ0FBbUMsRUFBcEM7O0FBQXVDO0VBQ3RDLHdCQUF3QixFQUF6Qjs7QUFBNEI7RUFDM0Isd0JBQXdCLEVBQXpCOztBQUE0QjtFQUMzQix1QkFBdUIsRUFBeEI7O0FBQTJCO0VBQzFCLHVCQUF1QixFQUF4Qjs7QUFHSjtFQUNFLG1CQUFtQixFQURKOztBQUlqQjtFQUNFLGtCQUFrQjtFQUNsQixtQkFBbUIsRUFGVjs7QUFLWDtFQUNFLFlBQVksRUFESjs7QUFJVjtHQUNFLFFBQVMsRUFESjtFQUVNO0lBQ1QsYUFBYTtJQUNiLGVBQWUsRUFGRTtFQUlsQjtJQUNDLFlBQVksRUFETDs7QUFLWDtFQUNFLGdCcEIvQmdCLEVvQjhCTjs7QUFJWjtFQUNFLDhCQUF5QyxFQUQ1Qjs7QUFJZjtFQUNFLHlCQUF5QixFQUROIiwiZmlsZSI6InN0eWxlcy5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNQVUxMSU5HIElOIENPTlRFTlRTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vKipcbiAqICNTRVRUSU5HU1xuICovXG5cblxuQGltcG9ydCBcIjAwLXNldHRpbmdzL3NldHRpbmdzLmdsb2JhbFwiO1xuQGltcG9ydCBcIjAwLXNldHRpbmdzL3NldHRpbmdzLmRlZmF1bHRzXCI7XG5AaW1wb3J0IFwiMDAtc2V0dGluZ3Mvc2V0dGluZ3MuY29sb3JzXCI7XG5AaW1wb3J0IFwiMDAtc2V0dGluZ3Mvc2V0dGluZ3MucmVzcG9uc2l2ZVwiO1xuXG5cbi8qKlxuICogI1RPT0xTXG4gKi9cbkBpbXBvcnQgXCIwMS10b29scy90b29scy5mdW5jdGlvbnNcIjtcbkBpbXBvcnQgXCIwMS10b29scy90b29scy5taXhpbnNcIjtcblxuXG5cblxuXG4vKipcbiAqICNHRU5FUklDXG4gKi9cbkBpbXBvcnQgXCIwMi1nZW5lcmljL2dlbmVyaWMubm9ybWFsaXplXCI7XG5AaW1wb3J0IFwiMDItZ2VuZXJpYy9nZW5lcmljLnJlc2V0XCI7XG5AaW1wb3J0IFwiMDItZ2VuZXJpYy9nZW5lcmljLmJveC1zaXppbmdcIjtcbkBpbXBvcnQgXCIwMi1nZW5lcmljL2dlbmVyaWMuc2hhcmVkXCI7XG5cblxuXG5cblxuLyoqXG4gKiAjQkFTRVxuICovXG5AaW1wb3J0IFwiMDMtYmFzZS9iYXNlLnBhZ2VcIjtcbkBpbXBvcnQgXCIwMy1iYXNlL2Jhc2UudHlwZVwiO1xuQGltcG9ydCBcIjAzLWJhc2UvYmFzZS5saW5rc1wiO1xuQGltcG9ydCBcIjAzLWJhc2UvYmFzZS5xdW90ZXNcIjtcbkBpbXBvcnQgXCIwMy1iYXNlL2Jhc2UuZ3JpZFwiO1xuXG5cblxuXG5cbi8qKlxuICogI09CSkVDVFNcbiAqL1xuQGltcG9ydCBcIjA0LW9iamVjdHMvb2JqZWN0cy53cmFwcGVyc1wiO1xuQGltcG9ydCBcIjA0LW9iamVjdHMvb2JqZWN0cy5idXR0b25zXCI7XG5cblxuXG5cblxuLyoqXG4gKiAjQ09NUE9ORU5UU1xuICovXG5AaW1wb3J0IFwiMDUtY29tcG9uZW50cy9jb21wb25lbnRzLmhlYWRlclwiO1xuXG5cblxuXG4vKipcbiAqICNUSEVNRVNcbiAqL1xuQGltcG9ydCBcIjA2LXRoZW1lcy90aGVtZXMuc3R5bGVndWlkZVwiO1xuXG5cblxuXG4vKipcbiAqICNUUlVNUFNcbiAqL1xuQGltcG9ydCBcIjA3LXRydW1wcy90cnVtcHMud2lkdGhzLXJlc3BvbnNpdmVcIjtcbkBpbXBvcnQgXCIwNy10cnVtcHMvdHJ1bXBzLnNob3ctaGlkZVwiO1xuQGltcG9ydCBcIjA3LXRydW1wcy90cnVtcHMuaGVscGVyc1wiO1xuIiwiLyohXG4gKiB3aWxscGxhdGUsIGJ5IFdpbGwgUnVzc2VsbFxuICpcbiAqL1xuIFxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgI0dMT0JBTFxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy9Vbml0IGZ1bmN0aW9uc1xuQGZ1bmN0aW9uIHJlbSgkc2l6ZSkgeyBcbiAgJHJlbVNpemU6ICRzaXplIC8gMTY7XG4gIEByZXR1cm4gJHJlbVNpemUgKiAxcmVtO1xufVxuXG5AZnVuY3Rpb24gZW0oJHNpemUpIHsgXG4gICRlbVNpemU6ICRzaXplIC8gMTY7XG4gIEByZXR1cm4gJGVtU2l6ZSAqIDFlbTtcbn1cblxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgI0RFRkFVTFRTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4kcGFkZGluZzogcmVtKDMwKTtcblxuJGJhc2UtdHJhbnNpdGlvbjogLjJzIGN1YmljLWJlemllcigwLjc4NSwgMC4xMzUsIDAuMTUwLCAwLjg2MCk7XG5cblxuLy8gSGlnaC1sZXZlbCBiYXNlIHNldHRpbmdzLlxuJGJhc2UtZm9udC1zaXplOiAgICAgICAgICByZW0oMTYpICFkZWZhdWx0O1xuJGJhc2UtbGluZS1oZWlnaHQ6ICAgICAgICByZW0oMjQpICFkZWZhdWx0O1xuLy8gJGJhc2UtdGV4dC1jb2xvcjogICAgICAgICBjb2woXCJibGFja1wiKSAhZGVmYXVsdDtcbi8vICRiYXNlLWJhY2tncm91bmQtY29sb3I6ICAgY29sKFwid2hpdGVcIikgIWRlZmF1bHQ7XG5cblxuXG5cblxuLy8gVGhlc2UgdmFyaWFibGVzIGFyZSBmcmFtZXdvcmsgdmFyaWFibGVzLCBzb3VyY2VkIGZyb20gdmFyaWFibGVzIGRlZmluZWRcbi8vIGFib3ZlLiBGZWVsIGZyZWUgdG8gdXNlIHRoZXNlIHZhcmlhYmxlcyB0aHJvdWdob3V0IHlvdXIgcHJvamVjdCwgYnV0IGRvIG5vdFxuLy8gbW9kaWZ5IG9yIHJlYXNzaWduIHRoZW0uXG4kYmFzZS1zcGFjaW5nLXVuaXQ6ICAgICAgICAgICAkYmFzZS1saW5lLWhlaWdodDtcbiRiYXNlLXNwYWNpbmctdW5pdC0tdGlueTogICAgIHJvdW5kKCRiYXNlLXNwYWNpbmctdW5pdCAvIDQpO1xuJGJhc2Utc3BhY2luZy11bml0LS1zbWFsbDogICAgcm91bmQoJGJhc2Utc3BhY2luZy11bml0IC8gMik7XG4kYmFzZS1zcGFjaW5nLXVuaXQtLWxhcmdlOiAgICByb3VuZCgkYmFzZS1zcGFjaW5nLXVuaXQgKiAyKTtcbiRiYXNlLXNwYWNpbmctdW5pdC0taHVnZTogICAgIHJvdW5kKCRiYXNlLXNwYWNpbmctdW5pdCAqIDQpO1xuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICNTRVRUSU5HUy1SRVNQT05TSVZFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4keHNtYWxsLWJyZWFrOiAgZW0oNDgwKTtcbiRzbWFsbC1icmVhazogICBlbSg0ODApO1xuJG1lZC1icmVhazogICAgIGVtKDgwMCk7XG4kbGFyZ2UtYnJlYWs6ICAgZW0oMTI4MCk7IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjRlVOQ1RJT05TXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4iLCIvLy8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4vLyAgICAjTUlYSU5TXG4vL1xcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qICAjRm9udCBmYWNlIG1peGluXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBtaXhpbiBmb250LWZhY2UoJGZvbnQtZmFtaWx5LCAkZmlsZS1wYXRoLCAkd2VpZ2h0OiBub3JtYWwsICRzdHlsZTogbm9ybWFsKSB7XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1mYW1pbHk7XG4gICAgZm9udC13ZWlnaHQ6ICR3ZWlnaHQ7XG4gICAgZm9udC1zdHlsZTogJHN0eWxlO1xuICAgIC8vIHNyYzogdXJsKCcjeyRmaWxlLXBhdGh9LmVvdCcpO1xuICAgIHNyYzogLy8gdXJsKCcjeyRmaWxlLXBhdGh9LmVvdD8jaWVmaXgnKSAgICAgICAgICAgICAgIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSxcbiAgICAgICAgIC8vIHVybCgnI3skZmlsZS1wYXRofS53b2ZmJykgICAgICAgICAgICAgICAgICAgICBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICAgIHVybCgnI3skZmlsZS1wYXRofS5vdGYnKSAgICAgICAgICAgICAgICAgICAgICBmb3JtYXQoJ29wZW50eXBlJyksXG4gICAgICAgICAvLyB1cmwoJyN7JGZpbGUtcGF0aH0uc3ZnIyN7JGZvbnQtZmFtaWx5fScpICAgICAgZm9ybWF0KCdzdmcnKTtcbiAgfVxufVxuXG4vKiAgI1Jlc3BvbnNpdmUgYnJlYWtwb2ludHMgbWl4aW5cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbkBtaXhpbiBicmVhaygkYnJlYWtQb2ludCkge1xuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkYnJlYWtQb2ludCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBicmVhay1tYXgoJGJyZWFrUG9pbnQpIHtcbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJGJyZWFrUG9pbnQgLSBlbSgxKSkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cblxuLyogICNTaXplIGhlbHBlclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AbWl4aW4gc2l6ZSgkd2lkdGgsICRoZWlnaHQ6ICR3aWR0aCkgeyBcbiAgd2lkdGg6ICR3aWR0aDtcbiAgaGVpZ2h0OiAkaGVpZ2h0O1xufVxuXG5cbi8qICAjcGxhY2Vob2xkZXIgaGVscGVyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xuICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge0Bjb250ZW50fVxuICA6LW1vei1wbGFjZWhvbGRlciAgICAgICAgICAge0Bjb250ZW50fVxuICA6Oi1tb3otcGxhY2Vob2xkZXIgICAgICAgICAge0Bjb250ZW50fVxuICA6LW1zLWlucHV0LXBsYWNlaG9sZGVyICAgICAge0Bjb250ZW50fSAgXG59XG5cbi8vIEFwcGx5IOKAmGF0dGVudGlvbuKAmSBzdHlsZXMgaW4gb25lIGdvLlxuQG1peGluIGF0dGVudGlvbigkc2VsZjogYWxsKSB7XG5cbiAgQGlmICRzZWxmID09IGFsbCB7XG5cbiAgICAmLFxuICAgICY6aG92ZXIsXG4gICAgJjphY3RpdmUsXG4gICAgJjpmb2N1cyB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG5cbiAgfVxuXG4gIEBlbHNlaWYgJHNlbGYgPT0gaG92ZXIge1xuXG4gICAgJjpob3ZlcixcbiAgICAmOmFjdGl2ZSxcbiAgICAmOmZvY3VzIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cblxuICB9XG5cbn1cbiIsIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgI1BVTExJTkcgSU4gQ09OVEVOVFNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqICNTRVRUSU5HU1xuICovXG4vKiFcbiAqIHdpbGxwbGF0ZSwgYnkgV2lsbCBSdXNzZWxsXG4gKlxuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICNHTE9CQUxcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICNERUZBVUxUU1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICNTRVRUSU5HUy1SRVNQT05TSVZFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiAjVE9PTFNcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICNGVU5DVElPTlNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgI0ZvbnQgZmFjZSBtaXhpblxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyogICNSZXNwb25zaXZlIGJyZWFrcG9pbnRzIG1peGluXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgI1NpemUgaGVscGVyXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKiAgI3BsYWNlaG9sZGVyIGhlbHBlclxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiAjR0VORVJJQ1xuICovXG4vKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sIGlucHV0W3R5cGU9XCJyZXNldFwiXSxcbmlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqL1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC8qIDMgKi8gfVxuXG4vKipcbiAqIFJlLXNldCBkZWZhdWx0IGN1cnNvciBmb3IgZGlzYWJsZWQgZWxlbWVudHMuXG4gKi9cbmJ1dHRvbltkaXNhYmxlZF0sXG5odG1sIGlucHV0W2Rpc2FibGVkXSB7XG4gIGN1cnNvcjogZGVmYXVsdDsgfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBib3JkZXIgaW4gRmlyZWZveCA0Ky5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuaW5wdXQ6Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXI6IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBBZGRyZXNzIEZpcmVmb3ggNCsgc2V0dGluZyBgbGluZS1oZWlnaHRgIG9uIGBpbnB1dGAgdXNpbmcgYCFpbXBvcnRhbnRgIGluXG4gKiB0aGUgVUEgc3R5bGVzaGVldC5cbiAqL1xuaW5wdXQge1xuICBsaW5lLWhlaWdodDogbm9ybWFsOyB9XG5cbi8qKlxuICogSXQncyByZWNvbW1lbmRlZCB0aGF0IHlvdSBkb24ndCBhdHRlbXB0IHRvIHN0eWxlIHRoZXNlIGVsZW1lbnRzLlxuICogRmlyZWZveCdzIGltcGxlbWVudGF0aW9uIGRvZXNuJ3QgcmVzcGVjdCBib3gtc2l6aW5nLCBwYWRkaW5nLCBvciB3aWR0aC5cbiAqXG4gKiAxLiBBZGRyZXNzIGJveCBzaXppbmcgc2V0IHRvIGBjb250ZW50LWJveGAgaW4gSUUgOC85LzEwLlxuICogMi4gUmVtb3ZlIGV4Y2VzcyBwYWRkaW5nIGluIElFIDgvOS8xMC5cbiAqL1xuaW5wdXRbdHlwZT1cImNoZWNrYm94XCJdLFxuaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBGaXggdGhlIGN1cnNvciBzdHlsZSBmb3IgQ2hyb21lJ3MgaW5jcmVtZW50L2RlY3JlbWVudCBidXR0b25zLiBGb3IgY2VydGFpblxuICogYGZvbnQtc2l6ZWAgdmFsdWVzIG9mIHRoZSBgaW5wdXRgLCBpdCBjYXVzZXMgdGhlIGN1cnNvciBzdHlsZSBvZiB0aGVcbiAqIGRlY3JlbWVudCBidXR0b24gdG8gY2hhbmdlIGZyb20gYGRlZmF1bHRgIHRvIGB0ZXh0YC5cbiAqL1xuaW5wdXRbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGRyZXNzIGBhcHBlYXJhbmNlYCBzZXQgdG8gYHNlYXJjaGZpZWxkYCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqIDIuIEFkZHJlc3MgYGJveC1zaXppbmdgIHNldCB0byBgYm9yZGVyLWJveGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIHNlYXJjaCBjYW5jZWwgYnV0dG9uIGluIFNhZmFyaSBhbmQgQ2hyb21lIG9uIE9TIFguXG4gKiBTYWZhcmkgKGJ1dCBub3QgQ2hyb21lKSBjbGlwcyB0aGUgY2FuY2VsIGJ1dHRvbiB3aGVuIHRoZSBzZWFyY2ggaW5wdXQgaGFzXG4gKiBwYWRkaW5nIChhbmQgYHRleHRmaWVsZGAgYXBwZWFyYW5jZSkuXG4gKi9cbmlucHV0W3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogRGVmaW5lIGNvbnNpc3RlbnQgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgYGNvbG9yYCBub3QgYmVpbmcgaW5oZXJpdGVkIGluIElFIDgvOS8xMC8xMS5cbiAqIDIuIFJlbW92ZSBwYWRkaW5nIHNvIHBlb3BsZSBhcmVuJ3QgY2F1Z2h0IG91dCBpZiB0aGV5IHplcm8gb3V0IGZpZWxkc2V0cy5cbiAqL1xubGVnZW5kIHtcbiAgYm9yZGVyOiAwO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSA4LzkvMTAvMTEuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiBEb24ndCBpbmhlcml0IHRoZSBgZm9udC13ZWlnaHRgIChhcHBsaWVkIGJ5IGEgcnVsZSBhYm92ZSkuXG4gKiBOT1RFOiB0aGUgZGVmYXVsdCBjYW5ub3Qgc2FmZWx5IGJlIGNoYW5nZWQgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gT1MgWC5cbiAqL1xub3B0Z3JvdXAge1xuICBmb250LXdlaWdodDogYm9sZDsgfVxuXG4vKiBUYWJsZXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSBtb3N0IHNwYWNpbmcgYmV0d2VlbiB0YWJsZSBjZWxscy5cbiAqL1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDsgfVxuXG50ZCxcbnRoIHtcbiAgcGFkZGluZzogMDsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgI1JFU0VUXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBBcyB3ZWxsIGFzIHVzaW5nIG5vcm1hbGl6ZS5jc3MsIGl0IGlzIG9mdGVuIGFkdmFudGFnZW91cyB0byByZW1vdmUgYWxsXG4gKiBtYXJnaW5zIGZyb20gY2VydGFpbiBlbGVtZW50cy5cbiAqL1xuYm9keSxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG5wLCBibG9ja3F1b3RlLCBwcmUsXG5kbCwgZGQsIG9sLCB1bCxcbmZvcm0sIGZpZWxkc2V0LCBsZWdlbmQsXG5maWd1cmUsXG50YWJsZSwgdGgsIHRkLCBjYXB0aW9uLFxuaHIge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxudWwsIG9sIHtcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW07IH1cblxuLyoqXG4gKiBHaXZlIGEgaGVscCBjdXJzb3IgdG8gZWxlbWVudHMgdGhhdCBnaXZlIGV4dHJhIGluZm8gb24gYDpob3ZlcmAuXG4gKi9cbmFiYnJbdGl0bGVdLFxuZGZuW3RpdGxlXSB7XG4gIGN1cnNvcjogaGVscDsgfVxuXG4vKipcbiAqIFJlbW92ZSB1bmRlcmxpbmVzIGZyb20gcG90ZW50aWFsbHkgdHJvdWJsZXNvbWUgZWxlbWVudHMuXG4gKi9cbnUsXG5pbnMge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLyoqXG4gKiBBcHBseSBmYXV4IHVuZGVybGluZXMgdG8gaW5zZXJ0ZWQgdGV4dCB2aWEgYGJvcmRlci1ib3R0b21gLlxuICovXG5pbnMge1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQ7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICNCT1gtU0laSU5HXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBTZXQgdGhlIGdsb2JhbCBgYm94LXNpemluZ2Agc3RhdGUgdG8gYGJvcmRlci1ib3hgLlxuICpcbiAqIGNzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZVxuICogcGF1bGlyaXNoLmNvbS8yMDEyL2JveC1zaXppbmctYm9yZGVyLWJveC1mdHdcbiAqL1xuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAgICNTSEFSRURcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxudWwsIG9sLCBkbCxcbmJsb2NrcXVvdGUsIHAsIGFkZHJlc3MsXG5ocixcbnRhYmxlLFxuZmllbGRzZXQsIGZpZ3VyZSxcbnByZSxcbi5sLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAxLjVyZW07IH1cblxuLyoqXG4gKiAjQkFTRVxuICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IE1lcmN1cnktVGV4dC1HMy1Sb21hbjtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL01lcmN1cnktVGV4dC1HMy1Sb21hbi5vdGZcIikgZm9ybWF0KFwib3BlbnR5cGVcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBGYWt0UHJvLUJsb25kO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvRmFrdFByby1CbG9uZC5vdGZcIikgZm9ybWF0KFwib3BlbnR5cGVcIik7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBGYWt0UHJvLU1lZGl1bTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL0Zha3RQcm8tTWVkaXVtLm90ZlwiKSBmb3JtYXQoXCJvcGVudHlwZVwiKTsgfVxuXG5odG1sIHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBjb2xvcjogYmxhY2s7XG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcbiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIkZha3RQcm8tQmxvbmRcIiwgXCJha3Rpdi1ncm90ZXNrLXN0ZFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogNDAwOyB9XG5cbi8qICAjSGVhZGluZ3Ncbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbmgxLCAudC1hbHBoYSxcbmgyLCAudC1iZXRhLFxuaDMsIC50LWdhbW1hLFxuaDQsIC50LWRlbHRhLFxuaDUsIC50LWVwc2lsb24sXG5oNiwgLnQtemV0YSxcbi50LWxlZGUge1xuICBmb250LWZhbWlseTogXCJNZXJjdXJ5LVRleHQtRzMtUm9tYW5cIiwgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDQwMDsgfVxuXG5oMSwgLnQtYWxwaGEge1xuICBmb250LXNpemU6IDIuMjVyZW07XG4gIGxpbmUtaGVpZ2h0OiAzcmVtO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTsgfVxuXG5oMiwgLnQtYmV0YSB7XG4gIGZvbnQtc2l6ZTogMS4zNzVyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjc1cmVtO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTsgfVxuXG4udC1sZWRlIHtcbiAgZm9udC1zaXplOiAyLjg3NXJlbTtcbiAgbGluZS1oZWlnaHQ6IDMuNXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAwNWVtOyB9XG5cbnN0cm9uZywgYiwgZW0sIGR0IHtcbiAgZm9udC1mYW1pbHk6IFwiRmFrdFByby1NZWRpdW1cIiwgXCJha3Rpdi1ncm90ZXNrLXN0ZFwiLCBzYW5zLXNlcmlmO1xuICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICAjTElOS1NcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246IDAuMnMgY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNSwgMC44Nik7IH1cbiAgYSxcbiAgYTpob3ZlcixcbiAgYTphY3RpdmUsXG4gIGE6Zm9jdXMge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5wIGEge1xuICBjb2xvcjogYmxhY2s7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbTogMC4wNjI1cmVtIHNvbGlkIGJsYWNrOyB9XG4gIHAgYTpob3ZlcixcbiAgcCBhOmFjdGl2ZSxcbiAgcCBhOmZvY3VzIHtcbiAgICBib3JkZXItYm90dG9tOiAwLjE4NzVyZW0gc29saWQgIzAwMTRiNDsgfVxuXG4udC1sZWRlIGEge1xuICBmb250LWZhbWlseTogXCJGYWt0UHJvLU1lZGl1bVwiLCBcImFrdGl2LWdyb3Rlc2stc3RkXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMi43NXJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG4gIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICB0cmFuc2l0aW9uOiBub25lO1xuICAvKipcbiAgKiBMYXllcnMgbXVsdHBsZSB0ZXh0LXNoYWRvd3Mgb24gdG9wIG9mIFxuICAqIGVhY2ggb3RoZXIgc3RlY2hpbmcgb3V0d2FyZHMgaG9yaXpvbnRhbGx5LlxuICAqKi9cbiAgdGV4dC1zaGFkb3c6IDAgLTAuMDMxMjVlbSB3aGl0ZSwgMCAwLjAzMTI1ZW0gd2hpdGUsIDAuMDMxMjVlbSAwIHdoaXRlLCAtMC4wMzEyNWVtIDAgd2hpdGUsIDAuMDYyNWVtIDAgd2hpdGUsIC0wLjA2MjVlbSAwIHdoaXRlLCAwLjA5Mzc1ZW0gMCB3aGl0ZSwgLTAuMDkzNzVlbSAwIHdoaXRlLCAwLjEyNWVtIDAgd2hpdGUsIC0wLjEyNWVtIDAgd2hpdGU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoYmxhY2ssIGJsYWNrKSwgbGluZWFyLWdyYWRpZW50KGJsYWNrLCBibGFjayksIGxpbmVhci1ncmFkaWVudChibGFjaywgYmxhY2spO1xuICAvKipcbiAgKiBVc2UgZW1zIGluc3RlYWQgb2YgcGl4ZWwgaWYgeW91IHdhbnQgXG4gICogdGhlIHVuZGVybGluZSBoZWlnaHQgdG8gYmUgcmVzcG9uc2l2ZSBcbiAgKiB0byBmb250LXNpemUuXG4gICoqL1xuICBiYWNrZ3JvdW5kLXNpemU6IDAuMDVlbSAwLjA2MjVyZW0sIDAuMDVlbSAwLjA2MjVyZW0sIDAuMDYyNXJlbSAwLjA2MjVyZW07XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQsIG5vLXJlcGVhdCwgcmVwZWF0LXg7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IDAlIDg4JSwgMTAwJSA4OCUsIDAlIDg4JTsgfVxuICAubHQtaWU5IC50LWxlZGUgYSB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuICAudC1sZWRlIGE6aG92ZXIge1xuICAgIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjMDAxNGI0LCAjMDAxNGI0KSwgbGluZWFyLWdyYWRpZW50KCMwMDE0YjQsICMwMDE0YjQpLCBsaW5lYXItZ3JhZGllbnQoIzAwMTRiNCwgIzAwMTRiNCk7XG4gICAgYmFja2dyb3VuZC1zaXplOiAwLjA1ZW0gMC4yNXJlbSwgMC4wNWVtIDAuMjVyZW0sIDAuMjVyZW0gMC4yNXJlbTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAwJSA5NiUsIDEwMCUgOTYlLCAwJSA5NiU7IH1cblxuLmxpbmstc2VjcmV0IHtcbiAgY29sb3I6IGluaGVyaXQ7IH1cbiAgLmxpbmstc2VjcmV0LFxuICAubGluay1zZWNyZXQ6aG92ZXIsXG4gIC5saW5rLXNlY3JldDphY3RpdmUsXG4gIC5saW5rLXNlY3JldDpmb2N1cyB7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG46OnNlbGVjdGlvbiB7XG4gIHRleHQtc2hhZG93OiBub25lO1xuICBiYWNrZ3JvdW5kOiAjMDAxNGI0O1xuICBjb2xvcjogI2ZmZjsgfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICAgI0dSSURcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4uZ3JpZCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogMTBweCAwIDAgLTEwcHg7XG4gIHBhZGRpbmc6IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gICAgLmdyaWQge1xuICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAgICAgLmdyaWQ6Zmlyc3QtY2hpbGQgW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDsgfVxuICAgICAgLmdyaWQuZ3JpZC0tbm9NYXJnaW5zIHtcbiAgICAgICAgbWFyZ2luOiAxMHB4IDAgMCAwOyB9IH1cblxuW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXNpemU6IG1lZGl1bTtcbiAgZm9udC1zaXplOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIFtjbGFzcyo9XCJjb2wtLVwiXSBpbWcge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5ncmlkLS1ub01hcmdpbnMgPiBbY2xhc3MqPVwiY29sLS1cIl0ge1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAgIC5ncmlkLS1ub01hcmdpbnMgPiBbY2xhc3MqPVwiY29sLS1cIl0ge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIHBhZGRpbmctbGVmdDogMDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tMSB7XG4gICAgd2lkdGg6IDguMzMzMzMlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS0yIHtcbiAgICB3aWR0aDogMTYuNjY2NjclOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS0zIHtcbiAgICB3aWR0aDogMjUlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS00IHtcbiAgICB3aWR0aDogMzMuMzMzMzMlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS01IHtcbiAgICB3aWR0aDogNDEuNjY2NjclOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS02IHtcbiAgICB3aWR0aDogNTAlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS03IHtcbiAgICB3aWR0aDogNTguMzMzMzMlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS04IHtcbiAgICB3aWR0aDogNjYuNjY2NjclOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS05IHtcbiAgICB3aWR0aDogNzUlOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS0xMCB7XG4gICAgd2lkdGg6IDgzLjMzMzMzJTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tMTEge1xuICAgIHdpZHRoOiA5MS42NjY2NyU7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLTEyIHtcbiAgICB3aWR0aDogMTAwJTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tZml4MSB7XG4gICAgd2lkdGg6IDYuMzAyMDhyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDIge1xuICAgIHdpZHRoOiAxMi42MDQxN3JlbTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tZml4MyB7XG4gICAgd2lkdGg6IDE4LjkwNjI1cmVtOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS1maXg0IHtcbiAgICB3aWR0aDogMjUuMjA4MzNyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDUge1xuICAgIHdpZHRoOiAzMS41MTA0MnJlbTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tZml4NiB7XG4gICAgd2lkdGg6IDM3LjgxMjVyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDcge1xuICAgIHdpZHRoOiA0NC4xMTQ1OHJlbTsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDMwZW0pIHtcbiAgLmNvbC0tZml4OCB7XG4gICAgd2lkdGg6IDUwLjQxNjY3cmVtOyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuY29sLS1maXg5IHtcbiAgICB3aWR0aDogNTYuNzE4NzVyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDEwIHtcbiAgICB3aWR0aDogNjMuMDIwODNyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDExIHtcbiAgICB3aWR0aDogNjkuMzIyOTJyZW07IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gIC5jb2wtLWZpeDEyIHtcbiAgICB3aWR0aDogNzUuNjI1cmVtOyB9IH1cblxuLmNvbC0tc3RhY2sge1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAzMGVtKSB7XG4gICAgLmNvbC0tc3RhY2sge1xuICAgICAgd2lkdGg6IDUwJTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwZW0pIHtcbiAgICAuY29sLS1zdGFjayB7XG4gICAgICB3aWR0aDogMzMuMzMzMzMzJTsgfSB9XG5cbi5ncmlkLS1mdWxsIHtcbiAgbWFyZ2luLWxlZnQ6IDA7IH1cbiAgLmdyaWQtLWZ1bGwgPiBbY2xhc3MqPVwiY29sLS1cIl0ge1xuICAgIHBhZGRpbmctbGVmdDogMDsgfVxuXG4uZ3JpZC0tcmV2IHtcbiAgZGlyZWN0aW9uOiBydGw7XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLmdyaWQtLXJldiA+IFtjbGFzcyo9XCJjb2wtLVwiXSB7XG4gICAgZGlyZWN0aW9uOiBsdHI7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4uZ3JpZC0tbWlkZGxlID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG4uZ3JpZC0tYm90dG9tID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsgfVxuXG4uZ3JpZC0tcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAuZ3JpZC0tcmlnaHQgPiBbY2xhc3MqPVwiY29sLS1cIl0ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuLmdyaWQtLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAuZ3JpZC0tY2VudGVyID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG5cbi8qKlxuICogI09CSkVDVFNcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qICAjV1JBUFBFUlNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ud3JhcHBlciB7XG4gIG1heC13aWR0aDogODBlbTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IDEuMjVyZW07XG4gIHBhZGRpbmctbGVmdDogMS4yNXJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA1MGVtKSB7XG4gICAgLndyYXBwZXIge1xuICAgICAgcGFkZGluZy1yaWdodDogMi41cmVtO1xuICAgICAgcGFkZGluZy1sZWZ0OiAyLjVyZW07IH0gfVxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICNCVVRUT05TXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiAjQ09NUE9ORU5UU1xuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSogICNIRUFERVJcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4ub2NuLXN3aXRjaCB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDVyZW07XG4gIGhlaWdodDogNXJlbTtcbiAgYmFja2dyb3VuZDogIzAwMTRiNDtcbiAgei1pbmRleDogMTAwO1xuICB0cmFuc2l0aW9uOiAuMnMgZWFzZTsgfVxuICAub2NuLXNob3ctcmlnaHQgLm9jbi1zd2l0Y2gge1xuICAgIGJhY2tncm91bmQ6IGJsYWNrOyB9XG5cbi5vY24ge1xuICBiYWNrZ3JvdW5kOiAjMDAxNGI0OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDUwZW0pIHtcbiAgICAub2NuIHtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7IH0gfVxuICAub2NuIHVsIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIGZvbnQtc2l6ZTogMDsgfVxuICAub2NuIGxpIHtcbiAgICBmb250LXNpemU6IG1lZGl1bTtcbiAgICBmb250LXNpemU6IGluaXRpYWw7IH1cblxuLm9jbl9fbGlzdF9faXRlbSB7XG4gIHRyYW5zaXRpb246IDAuMnMgY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNSwgMC44Nik7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAgIC5vY25fX2xpc3RfX2l0ZW0ge1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgcGFkZGluZzogMCAxLjg3NXJlbTtcbiAgICAgIGJvcmRlci1ib3R0b206IDAuMDYyNXJlbSBzb2xpZCBibGFjazsgfVxuICAgICAgLm9jbl9fbGlzdF9faXRlbS5pcy0tYWN0aXZlIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMC4yNXJlbSBzb2xpZCAjMDAxNGI0OyB9IH1cblxuLm9jbl9fbGlzdCBhIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxLjg3NXJlbTsgfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0OS45Mzc1ZW0pIHtcbiAgLm9jbi1zd2l0Y2gge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5vY24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogYXV0bztcbiAgICBvdmVyZmxvdzogYXV0bzsgfVxuICAuc2l0ZV9faW5uZXIsXG4gIC5vY24ge1xuICAgIHRyYW5zaXRpb246IDAuMnMgY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNSwgMC44Nik7IH1cbiAgLm9jbiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCk7XG4gICAgei1pbmRleDogMTsgfVxuICAuc2l0ZV9faW5uZXIge1xuICAgIG9wYWNpdHk6IDE7IH1cbiAgLm9jbiB7XG4gICAgcmlnaHQ6IDA7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKTsgfVxuICAub2NuX19saXN0IHtcbiAgICB0cmFuc2l0aW9uOiAwLjJzIGN1YmljLWJlemllcigwLjc4NSwgMC4xMzUsIDAuMTUsIDAuODYpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7IH1cbiAgLm9jbi1zaG93LXJpZ2h0IC5zaXRlX19pbm5lciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtNTAlLCAwLCAwKTsgfVxuICAub2NuLXNob3ctcmlnaHQgLm9jbiB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuICAub2NuLXNob3ctcmlnaHQgLm9jbl9fbGlzdCB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxuICAuaXMtLXZpc2libGUge1xuICAgIGRpc3BsYXk6IGJsb2NrOyB9IH1cblxuLnN3aXRjaC10cmFucyB7XG4gIHRyYW5zaXRpb246IDAuMnMgY3ViaWMtYmV6aWVyKDAuNzg1LCAwLjEzNSwgMC4xNSwgMC44Nik7IH1cbiAgLnN3aXRjaC10cmFucy5zd2l0Y2gtdHJhbnMtaW4ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCg1JSwgMCwgMCk7IH1cbiAgICAuc3dpdGNoLXRyYW5zLnN3aXRjaC10cmFucy1pbi5zd2l0Y2gtdHJhbnMtb3V0IHtcbiAgICAgIG9wYWNpdHk6IDE7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyB9XG5cbi8qKlxuICogI1RIRU1FU1xuICovXG4uc3R5bGVndWlkZSB7XG4gIG1hcmdpbi10b3A6IDVyZW07XG4gIG1hcmdpbi1ib3R0b206IDYuMjVyZW07IH1cbiAgLnN0eWxlZ3VpZGUgaHIge1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCBibGFjazsgfVxuICAuc3R5bGVndWlkZSAuc2ctc3ViaGVhZGluZyB7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICBmb250LXNpemU6IDMwcHg7IH1cbiAgLnN0eWxlZ3VpZGUgLnNnLXRpdGxlIHtcbiAgICBmb250LXNpemU6IDE4cHg7XG4gICAgbGluZS1oZWlnaHQ6IDI2cHg7XG4gICAgY29sb3I6ICMwMDE0YjQ7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNiMmIyYjI7XG4gICAgbWFyZ2luLXRvcDogNi4yNXJlbTsgfVxuXG4ucGFsZXR0ZSB7XG4gIG1hcmdpbjogMS44NzVyZW0gMCAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi5wYWxldHRlX19pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDAgMiU7IH1cblxuLnBhbGV0dGVfX2NpcmNsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogOS4zNzVyZW07XG4gIGhlaWdodDogOS4zNzVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDUwJTsgfVxuICAucGFsZXR0ZV9fY2lyY2xlLS1ib3JkZXIge1xuICAgIGJvcmRlcjogMC4wNjI1cmVtIHNvbGlkICNiMmIyYjI7IH1cblxuLnBhbGV0dGVfX3RpdGxlIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiAjVFJVTVBTXG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKiAgICAjU0hPVy1ISURFXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMzBlbSkge1xuICAuaC1zbWFsbC11cCB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNTBlbSkge1xuICAuaC1tZWQtdXAge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfSB9XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDgwZW0pIHtcbiAgLmgtbGFyZ2UtdXAge1xuICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAyOS45Mzc1ZW0pIHtcbiAgLmgtc21hbGwtZG93biB7XG4gICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50OyB9IH1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDkuOTM3NWVtKSB7XG4gIC5oLW1lZC1kb3duIHtcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7IH0gfVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3OS45Mzc1ZW0pIHtcbiAgLmgtbGFyZ2UtZG93biB7XG4gICAgZGlzcGxheTogbm9uZTsgfSB9XG5cbi5sLWJsdWUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAxNGI0ICFpbXBvcnRhbnQ7IH1cblxuLmwtYmx1ZS0taG92ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAxNGI0ICFpbXBvcnRhbnQ7IH1cblxuLnQtYmx1ZSB7XG4gIGNvbG9yOiAjMDAxNGI0ICFpbXBvcnRhbnQ7IH1cblxuLnQtYmx1ZS0taG92ZXI6aG92ZXIge1xuICBjb2xvcjogIzAwMTRiNCAhaW1wb3J0YW50OyB9XG5cbi5mLWJsdWUgc3ZnIHtcbiAgZmlsbDogIzAwMTRiNCAhaW1wb3J0YW50OyB9XG5cbi5mLWJsdWUtLWhvdmVyOmhvdmVyIHN2ZyB7XG4gIGZpbGw6ICMwMDE0YjQgIWltcG9ydGFudDsgfVxuXG4ubC13aGl0ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7IH1cblxuLmwtd2hpdGUtLWhvdmVyOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDsgfVxuXG4udC13aGl0ZSB7XG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OyB9XG5cbi50LXdoaXRlLS1ob3Zlcjpob3ZlciB7XG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50OyB9XG5cbi5mLXdoaXRlIHN2ZyB7XG4gIGZpbGw6IHdoaXRlICFpbXBvcnRhbnQ7IH1cblxuLmYtd2hpdGUtLWhvdmVyOmhvdmVyIHN2ZyB7XG4gIGZpbGw6IHdoaXRlICFpbXBvcnRhbnQ7IH1cblxuLmwtZ3JleSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmIyYjIgIWltcG9ydGFudDsgfVxuXG4ubC1ncmV5LS1ob3Zlcjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmIyYjIgIWltcG9ydGFudDsgfVxuXG4udC1ncmV5IHtcbiAgY29sb3I6ICNiMmIyYjIgIWltcG9ydGFudDsgfVxuXG4udC1ncmV5LS1ob3Zlcjpob3ZlciB7XG4gIGNvbG9yOiAjYjJiMmIyICFpbXBvcnRhbnQ7IH1cblxuLmYtZ3JleSBzdmcge1xuICBmaWxsOiAjYjJiMmIyICFpbXBvcnRhbnQ7IH1cblxuLmYtZ3JleS0taG92ZXI6aG92ZXIgc3ZnIHtcbiAgZmlsbDogI2IyYjJiMiAhaW1wb3J0YW50OyB9XG5cbi5sLWJsYWNrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2sgIWltcG9ydGFudDsgfVxuXG4ubC1ibGFjay0taG92ZXI6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjayAhaW1wb3J0YW50OyB9XG5cbi50LWJsYWNrIHtcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7IH1cblxuLnQtYmxhY2stLWhvdmVyOmhvdmVyIHtcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7IH1cblxuLmYtYmxhY2sgc3ZnIHtcbiAgZmlsbDogYmxhY2sgIWltcG9ydGFudDsgfVxuXG4uZi1ibGFjay0taG92ZXI6aG92ZXIgc3ZnIHtcbiAgZmlsbDogYmxhY2sgIWltcG9ydGFudDsgfVxuXG4udC1hbGlnbi1jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLmwtY2VudGVyIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bzsgfVxuXG4ubC1jbGVhciB7XG4gIGNsZWFyOiBib3RoOyB9XG5cbi5sLWNmLCAucGFsZXR0ZSB7XG4gICp6b29tOiAxOyB9XG4gIC5sLWNmOmJlZm9yZSwgLnBhbGV0dGU6YmVmb3JlLCAubC1jZjphZnRlciwgLnBhbGV0dGU6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IHRhYmxlOyB9XG4gIC5sLWNmOmFmdGVyLCAucGFsZXR0ZTphZnRlciB7XG4gICAgY2xlYXI6IGJvdGg7IH1cblxuLmwtcGFkZGluZyB7XG4gIHBhZGRpbmc6IDEuNXJlbTsgfVxuXG4ubC1tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogMS41cmVtICFpbXBvcnRhbnQ7IH1cblxuLmwtbWFyZ2luLXRvcC0tbm9uZSB7XG4gIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDsgfVxuIiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgICAjUkVTRVRcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogQXMgd2VsbCBhcyB1c2luZyBub3JtYWxpemUuY3NzLCBpdCBpcyBvZnRlbiBhZHZhbnRhZ2VvdXMgdG8gcmVtb3ZlIGFsbFxuICogbWFyZ2lucyBmcm9tIGNlcnRhaW4gZWxlbWVudHMuXG4gKi9cbmJvZHksXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LFxucCwgYmxvY2txdW90ZSwgcHJlLFxuZGwsIGRkLCBvbCwgdWwsXG5mb3JtLCBmaWVsZHNldCwgbGVnZW5kLFxuZmlndXJlLFxudGFibGUsIHRoLCB0ZCwgY2FwdGlvbixcbmhyIHtcbiAgbWFyZ2luOiAgMDtcbiAgcGFkZGluZzogMDtcbn1cblxudWwsIG9sIHtcbiAgcGFkZGluZy1sZWZ0OiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG59XG5cblxuXG4vKipcbiAqIEdpdmUgYSBoZWxwIGN1cnNvciB0byBlbGVtZW50cyB0aGF0IGdpdmUgZXh0cmEgaW5mbyBvbiBgOmhvdmVyYC5cbiAqL1xuYWJiclt0aXRsZV0sXG5kZm5bdGl0bGVdIHtcbiAgY3Vyc29yOiBoZWxwO1xufVxuXG5cblxuXG5cbi8qKlxuICogUmVtb3ZlIHVuZGVybGluZXMgZnJvbSBwb3RlbnRpYWxseSB0cm91Ymxlc29tZSBlbGVtZW50cy5cbiAqL1xudSxcbmlucyB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuXG5cblxuXG4vKipcbiAqIEFwcGx5IGZhdXggdW5kZXJsaW5lcyB0byBpbnNlcnRlZCB0ZXh0IHZpYSBgYm9yZGVyLWJvdHRvbWAuXG4gKi9cbmlucyB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDtcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0JPWC1TSVpJTkdcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi8qKlxuICogU2V0IHRoZSBnbG9iYWwgYGJveC1zaXppbmdgIHN0YXRlIHRvIGBib3JkZXItYm94YC5cbiAqXG4gKiBjc3MtdHJpY2tzLmNvbS9pbmhlcml0aW5nLWJveC1zaXppbmctcHJvYmFibHktc2xpZ2h0bHktYmV0dGVyLWJlc3QtcHJhY3RpY2VcbiAqIHBhdWxpcmlzaC5jb20vMjAxMi9ib3gtc2l6aW5nLWJvcmRlci1ib3gtZnR3XG4gKi9cbmh0bWwge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qIHtcbiAgJixcbiAgJjpiZWZvcmUsXG4gICY6YWZ0ZXIge1xuICAgIGJveC1zaXppbmc6IGluaGVyaXQ7XG4gIH1cbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1NIQVJFRFxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8gLyoqXG4vLyAgKiBXaGVyZSBgbWFyZ2luLWJvdHRvbWAgaXMgY29uY2VybmVkLHRoaXMgdmFsdWUgd2lsbCBiZSB0aGUgc2FtZSBhcyB0aGVcbi8vICAqIGJhc2UgbGluZS1oZWlnaHQuIFRoaXMgYWxsb3dzIHVzIHRvIGtlZXAgYSBjb25zaXN0ZW50IHZlcnRpY2FsIHJoeXRobS5cbi8vICAqIEFzIHBlcjogY3Nzd2l6YXJkcnkuY29tLzIwMTIvMDYvc2luZ2xlLWRpcmVjdGlvbi1tYXJnaW4tZGVjbGFyYXRpb25zXG4vLyAgKi9cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsXG51bCwgb2wsIGRsLFxuYmxvY2txdW90ZSwgcCwgYWRkcmVzcyxcbmhyLFxudGFibGUsXG5maWVsZHNldCwgZmlndXJlLFxucHJlLFxuJW1hcmdpbi10b3AsXG4ubC1tYXJnaW4tdG9wIHtcbiAgbWFyZ2luLXRvcDogKCRiYXNlLXNwYWNpbmctdW5pdCAvICRiYXNlLWZvbnQtc2l6ZSkgKiAxcmVtO1xuICAvLyBtYXJnaW4tdG9wOiAkcGFkZGluZztcbn1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIFdoZXJlIGBtYXJnaW4tbGVmdGAgaXMgY29uY2VybmVkIHdlIHdhbnQgdG8gdHJ5IGFuZCBpbmRlbnQgY2VydGFpbiBlbGVtZW50c1xuLy8gICogYnkgYSBjb25zaXN0ZW50IGFtb3VudC4gRGVmaW5lIHRoYXQgYW1vdW50IG9uY2UsaGVyZS5cbi8vICAqL1xuLy8gdWwsIG9sLCBkZCxcbi8vICVtYXJnaW4tbGVmdCB7XG4vLyAgIG1hcmdpbi1sZWZ0OiAyICogJGludWl0LWJhc2Utc3BhY2luZy11bml0O1xuLy8gICBtYXJnaW4tbGVmdDogKDIgKiAkaW51aXQtYmFzZS1zcGFjaW5nLXVuaXQgLyAkaW51aXQtYmFzZS1mb250LXNpemUpICogMXJlbTtcbi8vIH1cbiIsIi8vIC8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4vLyAgICAgI1BBR0Vcbi8vIFxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBpbmNsdWRlIGZvbnQtZmFjZShNZXJjdXJ5LVRleHQtRzMtUm9tYW4sIFwiLi4vZm9udHMvTWVyY3VyeS1UZXh0LUczLVJvbWFuXCIpO1xuQGluY2x1ZGUgZm9udC1mYWNlKEZha3RQcm8tQmxvbmQsIFwiLi4vZm9udHMvRmFrdFByby1CbG9uZFwiKTtcbkBpbmNsdWRlIGZvbnQtZmFjZShGYWt0UHJvLU1lZGl1bSwgXCIuLi9mb250cy9GYWt0UHJvLU1lZGl1bVwiKTtcblxuXG4kaGVhZGluZ3MtZm9udDogIFwiTWVyY3VyeS1UZXh0LUczLVJvbWFuXCIsIHNhbnMtc2VyaWY7XG4kYm9keS1mb250OiAgICAgIFwiRmFrdFByby1CbG9uZFwiLCBcImFrdGl2LWdyb3Rlc2stc3RkXCIsIHNhbnMtc2VyaWY7XG4kYm9keS1mb250LWJvbGQ6IFwiRmFrdFByby1NZWRpdW1cIiwgXCJha3Rpdi1ncm90ZXNrLXN0ZFwiLCBzYW5zLXNlcmlmO1xuXG5odG1sIHtcbiAgICBmb250LXNpemU6ICgkYmFzZS1mb250LXNpemUgLyByZW0oMTYpKSAqIDFlbTtcbiAgICBsaW5lLWhlaWdodDogJGJhc2UtbGluZS1oZWlnaHQgLyAkYmFzZS1mb250LXNpemU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGJhc2UtYmFja2dyb3VuZC1jb2xvcjtcbiAgICBjb2xvcjogJGJhc2UtdGV4dC1jb2xvcjtcbiAgICBvdmVyZmxvdy15OiBzY3JvbGw7IFxuICAgIG1pbi1oZWlnaHQ6IDEwMCU7IFxuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgICAgICAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IFxuICAgIC1tb3otb3N4LWZvbnQtc21vb3RoaW5nOiBncmF5c2NhbGU7IFxuICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVMZWdpYmlsaXR5O1xufVxuXG5ib2R5IHtcbiAgICBmb250LWZhbWlseTogJGJvZHktZm9udDtcbiAgICBmb250LXdlaWdodDogNDAwO1xufVxuIiwiLy8vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuLy8gICAgI0NPTE9SU1xuLy9cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vLyBDb2xvdXIgdmFyaWFibGVzXG4kcGFsZXR0ZTogKFxuICBcImJsdWVcIjogICMwMDE0YjQsXG4gIFwid2hpdGVcIjogd2hpdGUsXG4gIFwiZ3JleVwiOiAgI2IyYjJiMixcbiAgXCJibGFja1wiOiBibGFja1xuKTtcblxuLy9Db2xvdXIgZnVuY3Rpb25cbkBmdW5jdGlvbiBjb2woJGNvbG9yKSB7XG4gIEByZXR1cm4gbWFwLWdldCgkcGFsZXR0ZSwgJGNvbG9yKTtcbn1cblxuXG5cblxuXG4vLyBQYWdlXG4kYmFzZS1iYWNrZ3JvdW5kLWNvbG9yOiAgIGNvbChcIndoaXRlXCIpO1xuJGJhc2UtdGV4dC1jb2xvcjogICAgICAgICBjb2woXCJibGFja1wiKTtcbiRiYXNlLWJyYW5kLWNvbG9yOiAgICAgICAgIGNvbChcImJsdWVcIik7XG5cblxuXG5cblxuLy8gTGlua3NcbiRjb2xvci1saW5rczogICAgICAgICAgIGNvbChcImJsYWNrXCIpO1xuJGNvbG9yLWxpbmtzLWhvdmVyOiAgICAgY29sKFwiYmx1ZVwiKTtcbiRjb2xvci1saW5rcy1jYXJvdXNlbDogIGNvbChcImJsYWNrXCIpO1xuJGNvbG9yLWxpbmtzLXVuZGVybGluZTogY29sKFwiYmxhY2tcIik7XG5cblxuXG5cblxuLy8gQnV0dG9uc1xuJGNvbG9yLWJ0bjogICAgICRjb2xvci1saW5rcztcblxuXG5cblxuXG4vLyBQYWdlIGhlYWRcbiRjb2xvci1tYXN0aGVhZDogICAgICAgICAgICAgICAgY29sKFwid2hpdGVcIik7XG4kY29sb3ItcGFnZS1oZWFkLWJvcmRlcjogICAgICAgIGNvbChcImJsdWVcIik7XG4kY29sb3ItcGFnZS1oZWFkOiAgICAgICAgICAgICAgIGNvbChcIndoaXRlXCIpO1xuJGNvbG9yLXBhZ2UtaGVhZC1iYWNrZ3JvdW5kOiAgICBjb2woXCJ3aGl0ZVwiKTtcblxuXG5cblxuXG4vLyBTaXRlIG5hdlxuJGNvbG9yLXNpdGUtbmF2OiAgICAkYmFzZS10ZXh0LWNvbG9yO1xuXG5cblxuXG5cbi8vIFBhZ2UgZm9vdFxuJGNvbG9yLXBhZ2UtZm9vdDogICAgICAgICAgICAgICBjb2woXCJ3aGl0ZVwiKTtcblxuXG5cblxuXG4vLyBIZWFkaW5nc1xuJGNvbG9yLWhlYWRpbmdzOiAgICBjb2woXCJibGFja1wiKTtcbiRjb2xvci1oZWFkaW5nLXN1YjogY29sKFwiYmxhY2tcIik7XG5cblxuXG5cblxuLy8gUXVvdGVzXG4kY29sb3ItcXVvdGU6ICAgICAgICAgICBjb2woXCJibGFja1wiKTtcbiRjb2xvci1xdW90ZS0tYmFubmVyOiAgIGNvbChcImJsYWNrXCIpO1xuXG5cblxuXG5cbi8vIEJveGVzXG4kY29sb3ItYm94LWhpZ2hsaWdodC1iYWNrZ3JvdW5kOiAgICBjb2woXCJibGFja1wiKTtcbiRjb2xvci1ib3gtaGlnaGxpZ2h0LWJvcmRlcjogICAgICAgIGNvbChcImJsYWNrXCIpO1xuJGNvbG9yLWJveC10aW50LWJhY2tncm91bmQ6ICAgICAgICAgY29sKFwiYmxhY2tcIik7XG5cblxuXG5cblxuLy8gQmFuZHNcbiRjb2xvci1iYW5kLWhpZ2hsaWdodC1iYWNrZ3JvdW5kOiAgIGNvbChcImJsYWNrXCIpO1xuJGNvbG9yLWJhbmQtdGludC1iYWNrZ3JvdW5kOiAgICAgICAgY29sKFwiYmxhY2tcIik7XG4kY29sb3ItYmFuZC1kYXJrOiAgICAgICAgICAgICAgICAgICBjb2woXCJ3aGl0ZVwiKTtcbiRjb2xvci1iYW5kLWRhcmstYmFja2dyb3VuZDogICAgICAgIGNvbChcImJsYWNrXCIpO1xuIiwiLy8gLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbi8vICAgICAjVFlQRVxuLy8gXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLyogICNIZWFkaW5nc1xuLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5oMSwgLnQtYWxwaGEsIFxuaDIsIC50LWJldGEsXG5oMywgLnQtZ2FtbWEsIFxuaDQsIC50LWRlbHRhLCBcbmg1LCAudC1lcHNpbG9uLCBcbmg2LCAudC16ZXRhLCBcbi50LWxlZGUge1xuICBmb250LWZhbWlseTogJGhlYWRpbmdzLWZvbnQ7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbmgxLC50LWFscGhhIHtcbiAgZm9udC1zaXplOiByZW0oMzYpO1xuICBsaW5lLWhlaWdodDogcmVtKDQ4KTtcbiAgbGV0dGVyLXNwYWNpbmc6IC0wLjAxZW07XG59XG5cbmgyLC50LWJldGEge1xuICBmb250LXNpemU6IHJlbSgyMik7XG4gIGxpbmUtaGVpZ2h0OiByZW0oMjgpO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbn1cblxuLy8gaDMsLnQtZ2FtbWEge1xuLy8gICBmb250LXNpemU6IHJlbSgyNik7XG4vLyAgIGxpbmUtaGVpZ2h0OiByZW0oMzgpO1xuLy8gICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbi8vIH1cblxuLy8gaDQsLnQtZGVsdGEge1xuICBcbi8vIH1cblxuLnQtbGVkZSB7XG4gIGZvbnQtc2l6ZTogcmVtKDQ2KTtcbiAgbGluZS1oZWlnaHQ6IHJlbSg1Nik7XG4gIGxldHRlci1zcGFjaW5nOiAtMC4wMDVlbTtcbn1cblxuc3Ryb25nLCBiLCBlbSwgZHQge1xuICBmb250LWZhbWlseTogJGJvZHktZm9udC1ib2xkO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xufVxuXG4vLyAvKipcbi8vICAqIFR5cG9ncmFwaGljYWwgYmFzZSBzZWxlY3RvcnMuXG4vLyAgKi9cblxuLy8gLyoqXG4vLyAgKiBIZWFkaW5ncyAx4oCTNi5cbi8vICAqL1xuLy8gQGluY2x1ZGUgaGVhZGluZ3MoKSB7XG4vLyAgICAgQGluY2x1ZGUgZm9udC13ZWlnaHQocmVndWxhcik7XG4vLyAgICAgY29sb3I6ICRjb2xvci1oZWFkaW5ncztcbi8vIH1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIEEgZ2VuZXJpYyBoZWFkaW5nIHN0eWxlIHdoaWNoIGNhbiBiZSBhcHBsaWVkIHRvIGFueSBoZWFkaW5ncy5cbi8vICAqL1xuLy8gLmhlYWRpbmcge1xuLy8gICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgyMnB4KTtcbi8vIH1cblxuLy8gLmhlYWRpbmctc3ViIHtcbi8vICAgICBAaW5jbHVkZSBmb250LXNpemUoMTZweCk7XG4vLyAgICAgQGluY2x1ZGUgZm9udC13ZWlnaHQoYm9sZCk7XG4vLyAgICAgbWFyZ2luLWJvdHRvbTogMDtcbi8vICAgICBjb2xvcjogJGNvbG9yLWhlYWRpbmctc3ViO1xuLy8gfVxuXG5cblxuXG5cbi8vIC8qKlxuLy8gICogRW1ib2xkZW5lZCBlbGVtZW50cy5cbi8vICAqL1xuLy8gYSxcbi8vIHN0cm9uZywgYixcbi8vIGR0IHtcbi8vICAgICBAaW5jbHVkZSBmb250LXdlaWdodChib2xkKTtcbi8vIH1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIENvZGUtbGlrZSBlbGVtZW50cy5cbi8vICAqL1xuLy8gY29kZSwga2JkLCBzYW1wIHtcbi8vICAgICBjb2xvcjogJGNvbG9yLWNvZGU7XG4vLyAgICAgZm9udC1mYW1pbHk6IEluY29uc29sYXRhLCBNb25hY28sIENvbnNvbGFzLCBcIkFuZGFsZSBNb25vXCIsIFwiQml0c3RyZWFtIFZlcmEgU2FucyBNb25vXCIsIFwiQ291cmllciBOZXdcIiwgQ291cmllciwgbW9ub3NwYWNlO1xuLy8gfVxuXG4vLyBwcmUge1xuLy8gICAgIHdoaXRlLXNwYWNlOiBwcmU7XG4vLyAgICAgd29yZC13cmFwOiBub3JtYWw7XG4vLyAgICAgb3ZlcmZsb3c6IGF1dG87XG4vLyAgICAgcGFkZGluZzogJHNwYWNpbmctdW5pdC0tc21hbGw7XG4vLyAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yLXByZS1iYWNrZ3JvdW5kO1xuLy8gICAgIGJvcmRlci1yYWRpdXM6ICRiYXNlLXJvdW5kO1xuXG4vLyAgICAgJixcbi8vICAgICBjb2RlLCBrYmQsIHNhbXAge1xuLy8gICAgICAgICBjb2xvcjogJGNvbG9yLXByZTtcbi8vICAgICB9XG5cbi8vIH1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIEZpZ3VyZXMuXG4vLyAgKlxuLy8gICogMS4gT3V0ZGVudCBmaWd1cmVzIGJ5IGFuIGFyYml0cmFyeSBhbW91bnQgYXQgdGhlIHJlbGV2YW50IHZpZXdwb3J0IHNpemUuXG4vLyAgKiAyLiBSZWluZGVudCBmaWdjYXB0aW9ucy5cbi8vICAqL1xuLy8gZmlndXJlIHtcblxuLy8gICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEzODBweCkge1xuLy8gICAgICAgICBtYXJnaW4tbGVmdDogLTEyOHB4OyAvKiBbMV0gKi9cbi8vICAgICB9XG5cbi8vICAgICA+IGltZyB7XG4vLyAgICAgICAgIGJvcmRlci1yYWRpdXM6ICRiYXNlLXJvdW5kO1xuLy8gICAgIH1cblxuLy8gfVxuXG4vLyAgICAgZmlnY2FwdGlvbiB7XG4vLyAgICAgICAgIEBpbmNsdWRlIGZvbnQtc2l6ZSgxMnB4KTtcblxuLy8gICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMzgwcHgpIHtcbi8vICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMjhweDsgLyogWzJdICovXG4vLyAgICAgICAgIH1cblxuLy8gICAgIH1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIEhvcml6b250YWwgcnVsZXMuXG4vLyAgKi9cbi8vIGhyIHtcbi8vICAgICBib3JkZXI6IG5vbmU7XG4vLyAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRjb2xvci1ncmF5LXVpO1xuLy8gICAgIG1hcmdpbi1ib3R0b206ICRzcGFjaW5nLXVuaXQgLSAxcHg7XG4vLyB9XG5cblxuXG5cblxuLy8gLyoqXG4vLyAgKiBIaWdobGlnaHRlZCB0ZXh0LlxuLy8gICovXG4vLyBtYXJrIHtcblxuLy8gICAgIHByZSAmIHtcbi8vICAgICAgICAgYmFja2dyb3VuZDogbm9uZTtcbi8vICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkO1xuLy8gICAgICAgICBjb2xvcjogaW5oZXJpdDtcbi8vICAgICB9XG5cbi8vIH1cblxuXG5cblxuXG4vLyAvKipcbi8vICAqIFRleHQtYWxpZ25tZW50LlxuLy8gICovXG4vLyAudGV4dC1iYW5uZXIge1xuLy8gICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbi8vIH1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI0xJTktTXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5hIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRyYW5zaXRpb246ICRiYXNlLXRyYW5zaXRpb247XG4gIEBpbmNsdWRlIGF0dGVudGlvbihhbGwpIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIH1cbn1cblxucCBhIHtcbiAgY29sb3I6ICRjb2xvci1saW5rcztcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBib3JkZXItYm90dG9tOiByZW0oMSkgc29saWQgY29sKFwiYmxhY2tcIik7XG4gIEBpbmNsdWRlIGF0dGVudGlvbihob3Zlcikge1xuICAgIGJvcmRlci1ib3R0b206IHJlbSgzKSBzb2xpZCBjb2woXCJibHVlXCIpO1xuICB9XG59XG5cbiR1bmRlcmxpbmUtcG9zaXRpb24gOiA4OCU7XG4kdW5kZXJsaW5lLXRoaWNrbmVzczogcmVtKDEpO1xuXG4kdW5kZXJsaW5lLXBvc2l0aW9uLWggOiA5NiU7XG4kdW5kZXJsaW5lLXRoaWNrbmVzcy1oOiByZW0oNCk7XG5cbi8vIC51bmRlcmxpbmUge1xuLnQtbGVkZSBhIHtcbiAgZm9udC1mYW1pbHk6ICRib2R5LWZvbnQtYm9sZDtcbiAgZm9udC1zaXplOiByZW0oNDQpO1xuICBsZXR0ZXItc3BhY2luZzogLTAuMDFlbTtcbiAgYm9yZGVyOm5vbmUgIWltcG9ydGFudDtcbiAgdHJhbnNpdGlvbjogbm9uZTtcbiAgLyoqXG4gICogTGF5ZXJzIG11bHRwbGUgdGV4dC1zaGFkb3dzIG9uIHRvcCBvZiBcbiAgKiBlYWNoIG90aGVyIHN0ZWNoaW5nIG91dHdhcmRzIGhvcml6b250YWxseS5cbiAgKiovXG4gIHRleHQtc2hhZG93OiAvLyBcbiAgICAwIGVtKC0uNSkgJGJhc2UtYmFja2dyb3VuZC1jb2xvciwgIC8vdG9wXG4gICAgMCBlbSguNSkgJGJhc2UtYmFja2dyb3VuZC1jb2xvciwgICAvL2JvdHRvbVxuXG4gICAgZW0oLjUpIDAgJGJhc2UtYmFja2dyb3VuZC1jb2xvciwgICAvL3JpZ2h0XG4gICAgZW0oLS41KSAwICRiYXNlLWJhY2tncm91bmQtY29sb3IsICAvL2xlZnRcbiAgICBlbSgxKSAwICRiYXNlLWJhY2tncm91bmQtY29sb3IsICAgIC8vcmlnaHRcbiAgICBlbSgtMSkgMCAkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yLCAgLy9sZWZ0XG4gICAgZW0oMS41KSAwICRiYXNlLWJhY2tncm91bmQtY29sb3IsICAvL3JpZ2h0XG4gICAgZW0oLTEuNSkgMCAkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yLCAvL2xlZnRcbiAgICBlbSgyKSAwICRiYXNlLWJhY2tncm91bmQtY29sb3IsICAgIC8vcmlnaHRcbiAgICBlbSgtMikgMCAkYmFzZS1iYWNrZ3JvdW5kLWNvbG9yOyAgIC8vbGVmdFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgYmFja2dyb3VuZC1pbWFnZTpcbiAgICBsaW5lYXItZ3JhZGllbnQoJGNvbG9yLWxpbmtzLXVuZGVybGluZSwgJGNvbG9yLWxpbmtzLXVuZGVybGluZSksIC8vdGlueSBhZGRpdGlvbmFsIHVuZGVybGluZSBsZWZ0XG4gICAgbGluZWFyLWdyYWRpZW50KCRjb2xvci1saW5rcy11bmRlcmxpbmUsICRjb2xvci1saW5rcy11bmRlcmxpbmUpLCAvL3RpbnkgYWRkaXRpb25hbCB1bmRlcmxpbmUgcmlnaHRcbiAgICBsaW5lYXItZ3JhZGllbnQoJGNvbG9yLWxpbmtzLXVuZGVybGluZSwgJGNvbG9yLWxpbmtzLXVuZGVybGluZSk7IC8vbWFpbiB1bmRlcmxpbmVcbiAgLyoqXG4gICogVXNlIGVtcyBpbnN0ZWFkIG9mIHBpeGVsIGlmIHlvdSB3YW50IFxuICAqIHRoZSB1bmRlcmxpbmUgaGVpZ2h0IHRvIGJlIHJlc3BvbnNpdmUgXG4gICogdG8gZm9udC1zaXplLlxuICAqKi9cbiAgYmFja2dyb3VuZC1zaXplOlxuICAgIGVtKC44KSAkdW5kZXJsaW5lLXRoaWNrbmVzcywgLy90aW55IGFkZGl0aW9uYWwgdW5kZXJsaW5lIGxlZnRcbiAgICBlbSguOCkgJHVuZGVybGluZS10aGlja25lc3MsIC8vdGlueSBhZGRpdGlvbmFsIHVuZGVybGluZSByaWdodFxuICAgICR1bmRlcmxpbmUtdGhpY2tuZXNzICR1bmRlcmxpbmUtdGhpY2tuZXNzOyAvL21haW4gdW5kZXJsaW5lXG4gIGJhY2tncm91bmQtcmVwZWF0OiBcbiAgICBuby1yZXBlYXQsIC8vdGlueSBhZGRpdGlvbmFsIHVuZGVybGluZSBsZWZ0XG4gICAgbm8tcmVwZWF0LCAvL3RpbnkgYWRkaXRpb25hbCB1bmRlcmxpbmUgcmlnaHRcbiAgICByZXBlYXQteDsgIC8vbWFpbiB1bmRlcmxpbmVcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogXG4gICAgMCUgJHVuZGVybGluZS1wb3NpdGlvbiwgICAvL3RpbnkgYWRkaXRpb25hbCB1bmRlcmxpbmUgbGVmdFxuICAgIDEwMCUgJHVuZGVybGluZS1wb3NpdGlvbiwgLy90aW55IGFkZGl0aW9uYWwgdW5kZXJsaW5lIHJpZ2h0XG4gICAgMCUgJHVuZGVybGluZS1wb3NpdGlvbjsgICAvL21haW4gdW5kZXJsaW5lXG4gIC5sdC1pZTkgJiB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuICAmOmhvdmVyIHtcbiAgICBib3JkZXI6bm9uZSAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6XG4gICAgICBsaW5lYXItZ3JhZGllbnQoJGNvbG9yLWxpbmtzLWhvdmVyLCAkY29sb3ItbGlua3MtaG92ZXIpLCAvL3RpbnkgYWRkaXRpb25hbCBob3ZlciBsZWZ0XG4gICAgICBsaW5lYXItZ3JhZGllbnQoJGNvbG9yLWxpbmtzLWhvdmVyLCAkY29sb3ItbGlua3MtaG92ZXIpLCAvL3RpbnkgYWRkaXRpb25hbCBob3ZlciByaWdodFxuICAgICAgbGluZWFyLWdyYWRpZW50KCRjb2xvci1saW5rcy1ob3ZlciwgJGNvbG9yLWxpbmtzLWhvdmVyKTsgLy9tYWluIHVuZGVybGluZVxuICAgIGJhY2tncm91bmQtc2l6ZTpcbiAgICAgIGVtKC44KSAkdW5kZXJsaW5lLXRoaWNrbmVzcy1oLCAvL3RpbnkgYWRkaXRpb25hbCB1bmRlcmxpbmUgbGVmdFxuICAgICAgZW0oLjgpICR1bmRlcmxpbmUtdGhpY2tuZXNzLWgsIC8vdGlueSBhZGRpdGlvbmFsIHVuZGVybGluZSByaWdodFxuICAgICAgJHVuZGVybGluZS10aGlja25lc3MtaCByZW0oNCk7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogXG4gICAgICAwJSAkdW5kZXJsaW5lLXBvc2l0aW9uLWgsICAgLy90aW55IGFkZGl0aW9uYWwgdW5kZXJsaW5lIGxlZnRcbiAgICAgIDEwMCUgJHVuZGVybGluZS1wb3NpdGlvbi1oLCAvL3RpbnkgYWRkaXRpb25hbCB1bmRlcmxpbmUgcmlnaHRcbiAgICAgIDAlICR1bmRlcmxpbmUtcG9zaXRpb24taDsgICAvL21haW4gdW5kZXJsaW5lXG4gIH1cbn1cblxuLmxpbmstc2VjcmV0IHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIEBpbmNsdWRlIGF0dGVudGlvbigpIHtcbiAgICBjb2xvcjogJGNvbG9yLWxpbmtzO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuXG46OnNlbGVjdGlvbiB7IC8vIG9uIHNlbGVjdCByZW1vdmUgdGV4dC1zaGFkb3chXG4gIHRleHQtc2hhZG93OiBub25lO1xuICBiYWNrZ3JvdW5kOiBjb2woXCJibHVlXCIpO1xuICBjb2xvcjogI2ZmZjsgXG59XG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAgICNHUklEXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vL0NvbWJpbmUgdGhlIGxheW91dCBpdGVtcyB3aXRoIHRoZSB3aWR0aHMgZm91bmQgaW4gYHRydW1wcy53aWR0aHNgLlxuXG4kZ3V0dGVyOiAxMHB4O1xuXG4uZ3JpZCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIG1hcmdpbjogJGd1dHRlciAwIDAgLSN7JGd1dHRlcn07XG4gIHBhZGRpbmc6IDA7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGZvbnQtc2l6ZTogMDsgLy8gaW5saW5lLWJsb2NrIG15c3RlcnkgbWFyZ2luIGhhY2tcbiAgLy8gJjpmaXJzdC1jaGlsZCB7XG4gIC8vICAgbWFyZ2luLXRvcDowO1xuICAvLyAgIFtjbGFzcyo9XCJjb2wtLVwiXTpmaXJzdC1vZi10eXBlIHtcbiAgLy8gICAgIG1hcmdpbi10b3A6MDtcbiAgLy8gICB9XG4gIC8vIH1cblxuICBAaW5jbHVkZSBicmVhaygkc21hbGwtYnJlYWspIHtcbiAgICAmOmZpcnN0LWNoaWxkIHtcbiAgICAgIFtjbGFzcyo9XCJjb2wtLVwiXSB7XG4gICAgICAgIG1hcmdpbi10b3A6MDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgICAmLmdyaWQtLW5vTWFyZ2lucyB7XG4gICAgICBtYXJnaW46ICRndXR0ZXIgMCAwIDA7XG4gICAgfVxuICB9XG59XG5cbltjbGFzcyo9XCJjb2wtLVwiXSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXRvcDogJGd1dHRlcjtcbiAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1zaXplOiBtZWRpdW07IC8vSUVcbiAgZm9udC1zaXplOiBpbml0aWFsO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAvLyBtaW4taGVpZ2h0OiAkZ3V0dGVyO1xuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5ncmlkLS1ub01hcmdpbnMgPiAmIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG4gIEBpbmNsdWRlIGJyZWFrKCRzbWFsbC1icmVhaykge1xuICAgIC5ncmlkLS1ub01hcmdpbnMgPiAmIHtcbiAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgfVxuICB9XG59XG5cbkBmb3IgJGkgZnJvbSAxIHRocm91Z2ggMTIge1xuICAuY29sLS0jeyRpfSB7XG4gICAgQGluY2x1ZGUgYnJlYWsoJHNtYWxsLWJyZWFrKSB7XG4gICAgICB3aWR0aDogI3soKDEwMCUvMTIpKiRpKX07XG4gICAgfVxuICB9XG59XG5cbkBmb3IgJGkgZnJvbSAxIHRocm91Z2ggMTIge1xuICAuY29sLS1maXgjeyRpfSB7XG4gICAgQGluY2x1ZGUgYnJlYWsoJHNtYWxsLWJyZWFrKSB7XG4gICAgICB3aWR0aDogI3soKHJlbSgxMjEwKS8xMikqJGkpfTtcbiAgICB9XG4gIH1cbn1cblxuLy8gLmdyaWQtY29sdW1ucyB7XG4vLyAgIEBleHRlbmQgLmwtY2Y7XG4vLyAgIHdpZHRoOiAxMDAlO1xuLy8gICBtYXJnaW4tdG9wOiAkcGFkZGluZztcbi8vIH1cblxuLmNvbC0tc3RhY2sge1xuICB3aWR0aDogMTAwJTtcbiAgQGluY2x1ZGUgYnJlYWsoJHNtYWxsLWJyZWFrKSB7XG4gICAgd2lkdGg6IDUwJVxuICB9XG4gIEBpbmNsdWRlIGJyZWFrKCRtZWQtYnJlYWspIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzJVxuICB9XG4gIC8vIEBpbmNsdWRlIGJyZWFrKCRsYXJnZS1icmVhaykge1xuICAvLyAgIHdpZHRoOiAyNSVcbiAgLy8gfVxufVxuXG4vLyBHcmlkIE1vZGlmaWVyc1xuXG4uZ3JpZC0tZnVsbCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICAvLyBtYXJnaW4tdG9wOiAwO1xuXG4gID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICAvLyBtYXJnaW4tdG9wOiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuXG59XG5cbi5ncmlkLS1yZXYge1xuICBkaXJlY3Rpb246cnRsO1xuICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICBkaXJlY3Rpb246bHRyO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cblxufVxuXG4uZ3JpZC0tbWlkZGxlIHtcblxuICA+IFtjbGFzcyo9XCJjb2wtLVwiXSB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgfVxuXG59XG5cbi5ncmlkLS1ib3R0b20ge1xuXG4gID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1xuICB9XG5cbn1cblxuLmdyaWQtLXJpZ2h0IHtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG5cbiAgPiBbY2xhc3MqPVwiY29sLS1cIl0ge1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gIH1cblxufVxuXG4uZ3JpZC0tY2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG4gID4gW2NsYXNzKj1cImNvbC0tXCJdIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbn1cblxuXG4iLCIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAjV1JBUFBFUlNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbi53cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiBlbSgxMjgwKTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctcmlnaHQ6IHJlbSgyMCk7XG4gIHBhZGRpbmctbGVmdDogIHJlbSgyMCk7XG5cbiAgQGluY2x1ZGUgYnJlYWsoJG1lZC1icmVhaykge1xuICAgIHBhZGRpbmctcmlnaHQ6IHJlbSg0MCk7XG4gICAgcGFkZGluZy1sZWZ0OiAgcmVtKDQwKTtcbiAgfVxuXG59XG5cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICNCVVRUT05TXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vLyAvKipcbi8vICAqIEEgc2ltcGxlIGJ1dHRvbiBvYmplY3QuXG4vLyAgKi9cblxuLy8gLy8gUHJlZGVmaW5lIHRoZSB2YXJpYWJsZXMgYmVsb3cgaW4gb3JkZXIgdG8gYWx0ZXIgYW5kIGVuYWJsZSBzcGVjaWZpYyBmZWF0dXJlcy5cbi8vICRpbnVpdC1idG4tbmFtZXNwYWNlOiAgICAgICAkaW51aXQtbmFtZXNwYWNlICFkZWZhdWx0O1xuXG4vLyAkaW51aXQtYnRuLXBhZGRpbmc6ICAgICAgICAgaGFsdmUoJGludWl0LWJhc2Utc3BhY2luZy11bml0KSAhZGVmYXVsdDtcbi8vICRpbnVpdC1idG4tcGFkZGluZy0tc21hbGw6ICBoYWx2ZSgkaW51aXQtYnRuLXBhZGRpbmcpICFkZWZhdWx0O1xuLy8gJGludWl0LWJ0bi1wYWRkaW5nLS1sYXJnZTogIGRvdWJsZSgkaW51aXQtYnRuLXBhZGRpbmcpICFkZWZhdWx0O1xuLy8gJGludWl0LWJ0bi1iYWNrZ3JvdW5kOiAgICAgICM0YThlYzIgIWRlZmF1bHQ7XG4vLyAkaW51aXQtYnRuLWNvbG9yOiAgICAgICAgICAgI2ZmZiAhZGVmYXVsdDtcbi8vICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoOiAgICAxcHggIWRlZmF1bHQ7XG4vLyAkaW51aXQtYnRuLWJvcmRlci1zdHlsZTogICAgc29saWQgIWRlZmF1bHQ7XG4vLyAkaW51aXQtYnRuLWJvcmRlci1jb2xvcjogICAgJGludWl0LWJ0bi1iYWNrZ3JvdW5kICFkZWZhdWx0O1xuLy8gJGludWl0LWJ0bi1yYWRpdXM6ICAgICAgICAgIDAgIWRlZmF1bHQ7XG5cbi8vICRpbnVpdC1lbmFibGUtYnRuLS1zbWFsbDogICBmYWxzZSAhZGVmYXVsdDtcbi8vICRpbnVpdC1lbmFibGUtYnRuLS1sYXJnZTogICBmYWxzZSAhZGVmYXVsdDtcbi8vICRpbnVpdC1lbmFibGUtYnRuLS1mdWxsOiAgICBmYWxzZSAhZGVmYXVsdDtcbi8vICRpbnVpdC1lbmFibGUtYnRuLS1waWxsOiAgICBmYWxzZSAhZGVmYXVsdDtcblxuXG5cblxuXG4vLyAvLyBIZXJlIHdlIHNldCBhIHZhcmlhYmxlIGFzc3VtaW5nIHRoYXQgYGJveC1zaXppbmc6IGJvcmRlci1ib3g7YCBpcyBub3Qgc2V0XG4vLyAvLyBnbG9iYWxseS4gSWYgaXQgaGFzIGJlZW4gcHJldmlvdXNseSBiZWVuIGRlZmluZWQsIHRoZSBmb2xsb3dpbmcgdmFyaWFibGUgd2lsbFxuLy8gLy8gYmUgb3ZlcnJpZGVuIGFuZCB3aWxsIGJlIHNldCB0byBgdHJ1ZWAuXG4vLyAkaW51aXQtZ2xvYmFsLWJvcmRlci1ib3g6IGZhbHNlICFkZWZhdWx0O1xuXG5cblxuXG5cbi8vIC8qKlxuLy8gICogMS4gQWxsb3cgdXMgdG8gc3R5bGUgYm94IG1vZGVsIHByb3BlcnRpZXMuXG4vLyAgKiAyLiBMaW5lIGRpZmZlcmVudCBzaXplZCBidXR0b25zIHVwIGEgbGl0dGxlIG5pY2VyLlxuLy8gICogMy4gTWFrZSBidXR0b25zIGluaGVyaXQgZm9udCBzdHlsZXMgKG9mdGVuIG5lY2Vzc2FyeSB3aGVuIHN0eWxpbmcgYGlucHV0YHMgYXNcbi8vICAqICAgIGJ1dHRvbnMpLlxuLy8gICogNC4gUmVzZXQvbm9ybWFsaXplIHNvbWUgc3R5bGVzLlxuLy8gICogNS4gRm9yY2UgYWxsIGJ1dHRvbi1zdHlsZWQgZWxlbWVudHMgdG8gYXBwZWFyIGNsaWNrYWJsZS5cbi8vICAqIDYuIEZpeGVzIG9kZCBpbm5lciBzcGFjaW5nIGluIElFNy5cbi8vICAqIDcuIFN1YnRyYWN0IHRoZSBib3JkZXIgc2l6ZSBmcm9tIHRoZSBwYWRkaW5nIHZhbHVlIHNvIHRoYXQgYnV0dG9ucyBkbyBub3Rcbi8vICAqICAgIGdyb3cgbGFyZ2VyIGFzIHdlIGFkZCBib3JkZXJzLlxuLy8gICovXG4vLyAuYnRuLFxuLy8gJWJ0biB7XG4vLyAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiBbMV0gKi9cbi8vICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyAvKiBbMl0gKi9cbi8vICAgICBmb250OiBpbmhlcml0OyAvKiBbM10gKi9cbi8vICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IC8qIFs0XSAqL1xuLy8gICAgIG1hcmdpbjogIDA7IC8qIFs0XSAqL1xuLy8gICAgIGN1cnNvcjogcG9pbnRlcjsgLyogWzVdICovXG4vLyAgICAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIFs2XSAqL1xuLy8gICAgIHBhZGRpbmc6ICRpbnVpdC1idG4tcGFkZGluZyAtICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoICBkb3VibGUoJGludWl0LWJ0bi1wYWRkaW5nKSAtICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoOyAvKiBbN10gKi9cbi8vICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkaW51aXQtYnRuLWJhY2tncm91bmQ7XG5cbi8vICAgICBAaWYoJGludWl0LWJ0bi1ib3JkZXItd2lkdGggIT0gMCkge1xuLy8gICAgICAgICBib3JkZXI6ICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoICRpbnVpdC1idG4tYm9yZGVyLXN0eWxlICRpbnVpdC1idG4tYm9yZGVyLWNvbG9yO1xuLy8gICAgIH0gQGVsc2Uge1xuLy8gICAgICAgICBib3JkZXI6IG5vbmU7IC8qIFs0XSAqL1xuLy8gICAgIH1cblxuLy8gICAgIEBpZigkaW51aXQtYnRuLXJhZGl1cyAhPSAwKSB7XG4vLyAgICAgICAgIGJvcmRlci1yYWRpdXM6ICRpbnVpdC1idG4tcmFkaXVzO1xuLy8gICAgIH1cblxuLy8gICAgICYsXG4vLyAgICAgJjpob3Zlcixcbi8vICAgICAmOmFjdGl2ZSxcbi8vICAgICAmOmZvY3VzIHtcbi8vICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyAvKiBbNF0gKi9cbi8vICAgICAgICAgY29sb3I6ICRpbnVpdC1idG4tY29sb3I7XG4vLyAgICAgfVxuXG4vLyB9XG5cbi8vIC8qKlxuLy8gICogRml4IGEgRmlyZWZveCBidWcgd2hlcmVieSBgaW5wdXQgdHlwZT1cInN1Ym1pdFwiYCBnYWlucyAycHggZXh0cmEgcGFkZGluZy5cbi8vICAqL1xuLy8gLmJ0bjo6LW1vei1mb2N1cy1pbm5lcixcbi8vICVidG46Oi1tb3otZm9jdXMtaW5uZXIge1xuLy8gICAgIGJvcmRlcjogIDA7XG4vLyAgICAgcGFkZGluZzogMDtcbi8vIH1cblxuXG5cblxuXG4vLyBAaWYgKCRpbnVpdC1lbmFibGUtYnRuLS1zbWFsbCA9PSB0cnVlKSB7XG5cbi8vICAgICAvKipcbi8vICAgICAgKiBTbWFsbCBidXR0b25zLlxuLy8gICAgICAqL1xuXG4vLyAgICAgLiN7JGludWl0LWJ0bi1uYW1lc3BhY2V9YnRuLS1zbWFsbCxcbi8vICAgICAlI3skaW51aXQtYnRuLW5hbWVzcGFjZX1idG4tLXNtYWxsIHtcbi8vICAgICAgICAgcGFkZGluZzogJGludWl0LWJ0bi1wYWRkaW5nLS1zbWFsbCAtICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoICBkb3VibGUoJGludWl0LWJ0bi1wYWRkaW5nLS1zbWFsbCkgLSAkaW51aXQtYnRuLWJvcmRlci13aWR0aDsgLyogWzddICovXG4vLyAgICAgfVxuXG4vLyB9XG5cbi8vIEBpZiAoJGludWl0LWVuYWJsZS1idG4tLWxhcmdlID09IHRydWUpIHtcblxuLy8gICAgIC8qKlxuLy8gICAgICAqIExhcmdlIGJ1dHRvbnMuXG4vLyAgICAgICovXG5cbi8vICAgICAuI3skaW51aXQtYnRuLW5hbWVzcGFjZX1idG4tLWxhcmdlLFxuLy8gICAgICUjeyRpbnVpdC1idG4tbmFtZXNwYWNlfWJ0bi0tbGFyZ2Uge1xuLy8gICAgICAgICBwYWRkaW5nOiAkaW51aXQtYnRuLXBhZGRpbmctLWxhcmdlIC0gJGludWl0LWJ0bi1ib3JkZXItd2lkdGggIGRvdWJsZSgkaW51aXQtYnRuLXBhZGRpbmctLWxhcmdlKSAtICRpbnVpdC1idG4tYm9yZGVyLXdpZHRoOyAvKiBbN10gKi9cbi8vICAgICB9XG5cbi8vIH1cblxuXG5cblxuXG4vLyBAaWYgKCRpbnVpdC1lbmFibGUtYnRuLS1mdWxsID09IHRydWUpIHtcblxuLy8gICAgIC8qKlxuLy8gICAgICAqIEZ1bGwtd2lkdGggYnV0dG9ucy5cbi8vICAgICAgKi9cblxuLy8gICAgIC4jeyRpbnVpdC1idG4tbmFtZXNwYWNlfWJ0bi0tZnVsbCxcbi8vICAgICAlI3skaW51aXQtYnRuLW5hbWVzcGFjZX1idG4tLWZ1bGwge1xuLy8gICAgICAgICB3aWR0aDogMTAwJTtcblxuLy8gICAgICAgICBAaWYgJGludWl0LWdsb2JhbC1ib3JkZXItYm94ID09IGZhbHNlIHtcbi8vICAgICAgICAgICAgIC8qKlxuLy8gICAgICAgICAgICAgICogUmVtb3ZlIHBhZGRpbmdzIHNvIHRoYXQgd2lkdGhzIGFuZCBwYWRkaW5ncyBkb27igJl0IGNvbmZsaWN0LlxuLy8gICAgICAgICAgICAgICovXG4vLyAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuLy8gICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAgMDtcbi8vICAgICAgICAgfVxuXG4vLyAgICAgfVxuXG4vLyB9XG5cblxuXG5cblxuLy8gQGlmICgkaW51aXQtZW5hYmxlLWJ0bi0tcGlsbCA9PSB0cnVlKSB7XG5cbi8vICAgICAvKipcbi8vICAgICAgKiBSb3VuZC1lbmRlZCBidXR0b25zLlxuLy8gICAgICAqXG4vLyAgICAgICogMS4gT3Zlcmx5LWxhcmdlIHZhbHVlIHRvIGVuc3VyZSB0aGUgcmFkaXVzIHJvdW5kcyB0aGUgd2hvbGUgZW5kIG9mIHRoZVxuLy8gICAgICAqICAgIGJ1dHRvbi5cbi8vICAgICAgKi9cblxuLy8gICAgIC4jeyRpbnVpdC1idG4tbmFtZXNwYWNlfWJ0bi0tcGlsbCxcbi8vICAgICAlI3skaW51aXQtYnRuLW5hbWVzcGFjZX1idG4tLXBpbGwge1xuLy8gICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDsgLyogWzFdICovXG4vLyAgICAgfVxuXG4vLyB9IiwiLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgI0hFQURFUlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuXG4vLyBEZWZpbmUgb3VyIHZhcmlhYmxlc1xuXG4kcmlnaHQtd2lkdGg6ICAgMTAwJSAhZGVmYXVsdDtcbiRvdmVybGFwLXJhdGlvOiAyICFkZWZhdWx0O1xuJHNwZWVkOiAuMnM7XG5cbi8vIE1lbnUgQnV0dG9uXG5cbi5vY24tc3dpdGNoIHtcbiAgZGlzcGxheTogbm9uZTsgLy90dXJuZWQgYmxvY2sgd2l0aCBqcyBraWNrcyBpbiB0byBzdG9wIG1lbnUgZmxhc2ggb24gbG9hZFxuICAvLyBkaXNwbGF5OiBibG9jaztcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBAaW5jbHVkZSBzaXplKHJlbSg4MCkpO1xuICBiYWNrZ3JvdW5kOiAkYmFzZS1icmFuZC1jb2xvcjtcbiAgei1pbmRleDogMTAwO1xuICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDAlLDAsMCk7XG4gIHRyYW5zaXRpb246IC4ycyBlYXNlO1xuICAvLyB3aWxsLWNoYW5nZTogdHJhbnNmb3JtO1xuICAub2NuLXNob3ctcmlnaHQgJiB7XG4gICAgYmFja2dyb3VuZDogJGJhc2UtdGV4dC1jb2xvcjtcbiAgICAvLyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0kcmlnaHQtd2lkdGgsMCwwKTtcbiAgfVxufVxuXG5cbi8vTmF2IExpc3RcblxuLm9jbiB7XG4gIGJhY2tncm91bmQ6ICRiYXNlLWJyYW5kLWNvbG9yO1xuICBAaW5jbHVkZSBicmVhaygkbWVkLWJyZWFrKSB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgfVxuICB1bCB7XG4gICAgbWFyZ2luOjA7XG4gICAgcGFkZGluZzowO1xuICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgICBmb250LXNpemU6IDA7XG4gIH1cbiAgbGkge1xuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xuICAgIGZvbnQtc2l6ZTogaW5pdGlhbDtcbiAgfVxufVxuXG4ub2NuX19saXN0IHsgLy91bFxuICAvLyBAaW5jbHVkZSBicmVhaygkbWVkLWJyZWFrKSB7XG4gIC8vICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAvLyAgIG1hcmdpbjogMCBhdXRvO1xuICAvLyB9XG59XG5cbi5vY25fX2xpc3RfX2l0ZW0geyAvL2xpXG4gIHRyYW5zaXRpb246ICRiYXNlLXRyYW5zaXRpb247XG4gIEBpbmNsdWRlIGJyZWFrKCRtZWQtYnJlYWspIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgcGFkZGluZzogMCAkcGFkZGluZztcbiAgICBib3JkZXItYm90dG9tOiByZW0oMSkgc29saWQgY29sKFwiYmxhY2tcIik7XG4gICAgJi5pcy0tYWN0aXZlIHtcbiAgICAgIGJvcmRlci1ib3R0b206IHJlbSg0KSBzb2xpZCBjb2woXCJibHVlXCIpO1xuICAgIH1cbiAgfVxufVxuXG4ub2NuX19saXN0IGEge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6ICRwYWRkaW5nO1xuICAvLyBAaW5jbHVkZSBicmVhaygkbWVkLWJyZWFrKSB7XG4gIC8vICAgYm9yZGVyOiAwO1xuICAvLyAgIHBhZGRpbmc6IDA7XG4gIC8vICAgbWluLWhlaWdodDogMDtcbiAgLy8gfVxufVxuXG4vLyAub2NuX19zdWIge1xuLy8gICB6LWluZGV4OiAtMTtcbi8vICAgaGVpZ2h0OiAwO1xuLy8gICB0cmFuc2l0aW9uOiBhbGwgLjNzIGN1YmljLWJlemllcigwLjE5MCwgMS4wMDAsIDAuMjIwLCAxLjAwMCk7XG4vLyAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbi8vICAgYmFja2dyb3VuZDogY29sKFwiZ3JlZW4tLWRhcmtlclwiKTtcbi8vICAgb3ZlcmZsb3c6IGhpZGRlbjtcbi8vICAgQGluY2x1ZGUgYnJlYWsoJG1lZC1icmVhaykge1xuLy8gICAgIGRpc3BsYXk6IG5vbmU7XG4vLyAgICAgd2lkdGg6IDA7XG4vLyAgICAgaGVpZ2h0OiAwO1xuLy8gICB9XG4vLyB9XG5cbi8vIC5vY25fX3N1Yi0tdG9nZ2xlIHtcbi8vICAgd2lkdGg6IDEwMCU7XG4vLyAgIGhlaWdodDogcmVtKDcwKTtcbi8vICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICB0b3A6MDtcbi8vICAgb3BhY2l0eTogMTtcbi8vICAgY3Vyc29yOiBwb2ludGVyO1xuLy8gICAmOmFmdGVyIHtcbi8vICAgICBjb250ZW50OiBcIlwiO1xuLy8gICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbi8vICAgICB0b3A6IHJlbSgzMCk7XG4vLyAgICAgbGVmdDogcmVtKDEyMCk7XG4vLyAgICAgQGluY2x1ZGUgc2l6ZShyZW0oMTApLCByZW0oOCkpO1xuLy8gICAgIGJhY2tncm91bmQ6IGJsdWU7XG4vLyAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVaKDApO1xuLy8gICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuLy8gICAgIHRyYW5zaXRpb246IGFsbCAuNXMgY3ViaWMtYmV6aWVyKDAuMTkwLCAxLjAwMCwgMC4yMjAsIDEuMDAwKTtcbi8vICAgfVxuLy8gICAmLmlzLS1yb3RhdGVkOmFmdGVyIHtcbi8vICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuLy8gICB9XG4vLyB9XG5cbi8vIC5vY25fX3N1YiBsaSB7XG4vLyAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4vLyAgIG9wYWNpdHk6IDA7XG4vLyAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbi8vICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKHJlbSgtMjApKTtcbi8vICAgLy8gdmlzaWJpbGl0eTogaGlkZGVuO1xuLy8gfVxuXG4vLyAub2NuX19zdWIuaXMtLXZpc2libGUge1xuLy8gICB6LWluZGV4OiAwO1xuLy8gICBoZWlnaHQ6IHJlbSg3MCkqODtcbi8vICAgb3ZlcmZsb3c6IHZpc2libGU7XG4vLyAgIGxpIHtcbi8vICAgICBvcGFjaXR5OiAxOyBcbi8vICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCk7XG4vLyAgICAgLy8gdmlzaWJpbGl0eTogdmlzaWJsZTtcbi8vICAgICB0cmFuc2l0aW9uOiBhbGwgLjVzIGN1YmljLWJlemllcigwLjE5MCwgMS4wMDAsIDAuMjIwLCAxLjAwMCk7XG4vLyAgIH1cbi8vICAgJjphZnRlciB7XG4vLyAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcbi8vICAgfVxuLy8gfVxuXG4vLyAub2NuX19zdWIgYSB7XG4vLyAgIGZvbnQtc2l6ZTogcmVtKDEwKTtcbi8vICAgbGluZS1oZWlnaHQ6IHJlbSgxNik7XG4vLyAgIGxldHRlci1zcGFjaW5nOiAuMmVtO1xuLy8gICBwYWRkaW5nLWxlZnQ6IHJlbSg2MCk7XG4vLyB9XG5cbkBpbmNsdWRlIGJyZWFrLW1heCgkbWVkLWJyZWFrKSB7XG5cbiAgLm9jbi1zd2l0Y2gge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG5cbiAgLm9jbiB7XG4gICAgZGlzcGxheTpub25lO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB0b3A6IDA7XG4gICAgYm90dG9tOiAwO1xuICAgIGxlZnQ6IGF1dG87XG4gICAgcmlnaHQ6IGF1dG87XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgLy8gb3ZlcmZsb3cteDpoaWRkZW47XG4gICAgLy8gb3ZlcmZsb3cteTogYXV0bztcbiAgfVxuXG4gIC5zaXRlX19pbm5lcixcbiAgLm9jbiB7XG4gICAgdHJhbnNpdGlvbjogJGJhc2UtdHJhbnNpdGlvbjtcbiAgfVxuXG4gIC5vY24ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWigwKTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG4gICAgXG4gIEBpZiAkcmlnaHQtd2lkdGggIT0gMHB4IHtcbiAgICAuc2l0ZV9faW5uZXJ7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbiAgICAub2NuIHtcbiAgICAgIHJpZ2h0OjA7XG4gICAgICB3aWR0aDokcmlnaHQtd2lkdGg7XG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDEwMCUsMCwwKTtcbiAgICB9XG4gICAgLm9jbl9fbGlzdCB7XG4gICAgICB0cmFuc2l0aW9uOiAkYmFzZS10cmFuc2l0aW9uO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLDAsMCk7XG4gICAgfVxuICB9XG5cbiAgQGlmICRyaWdodC13aWR0aCAhPSAwcHgge1xuICAgIC5vY24tc2hvdy1yaWdodCB7XG5cbiAgICAgIC5zaXRlX19pbm5lciB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLSN7JHJpZ2h0LXdpZHRoIC8gJG92ZXJsYXAtcmF0aW99LDAsMCk7XG4gICAgICB9XG5cbiAgICAgIC5vY24ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsMCwwKTtcbiAgICAgIH1cblxuICAgICAgLm9jbl9fbGlzdCB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwwLDApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIFN0YXRlIGZvciBzaG93aW5nIE5hdiBhZnRlciBwYWdlIGhhcyBsb2FkZWRcbiAgLmlzLS12aXNpYmxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgfVxuXG59XG5cbi8vIFBhZ2UgbG9hZGluZ1xuXG4uc3dpdGNoLXRyYW5zIHtcbiAgdHJhbnNpdGlvbjogJGJhc2UtdHJhbnNpdGlvbjsgLy9jaGVla3lcblxuICAmLnN3aXRjaC10cmFucy1pbiB7XG4gICAgb3BhY2l0eTogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDUlLCAwLCAwKTtcblxuICAgICYuc3dpdGNoLXRyYW5zLW91dCB7XG4gICAgICBvcGFjaXR5OiAxO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgICAgXG4gICAgfSBcbiAgfVxufVxuXG4iLCIvLyAvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuLy8gICAgICNTdHlsZSBHdWlkZSBPYmplY3RzXG4vLyBcXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4uc3R5bGVndWlkZSB7XG4gIG1hcmdpbi10b3A6IHJlbSg4MCk7XG4gIG1hcmdpbi1ib3R0b206IHJlbSgxMDApO1xuICBociB7XG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkIGNvbChcImJsYWNrXCIpO1xuICB9XG4gIC5zZy1zdWJoZWFkaW5nIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgfVxuICAuc2ctdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBsaW5lLWhlaWdodDogMjZweDtcbiAgICBjb2xvcjogY29sKFwiYmx1ZVwiKTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgY29sKFwiZ3JleVwiKTtcbiAgICBtYXJnaW4tdG9wOiByZW0oMTAwKTtcbiAgfVxufVxuXG4ucGFsZXR0ZSB7XG4gIG1hcmdpbjogJHBhZGRpbmcgMCAwO1xuICBwYWRkaW5nOiAwO1xuICBAZXh0ZW5kIC5sLWNmO1xufVxuXG4ucGFsZXR0ZV9faXRlbSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luOiAwIDIlO1xuICBcbn1cblxuLnBhbGV0dGVfX2NpcmNsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBAaW5jbHVkZSBzaXplKCByZW0oMTUwKSApO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICYtLWJvcmRlciB7XG4gICAgYm9yZGVyOiByZW0oMSkgc29saWQgY29sKFwiZ3JleVwiKTtcbiAgfVxufVxuXG4ucGFsZXR0ZV9fdGl0bGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiIsIi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gICAgI1NIT1ctSElERVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8gQG1peGluIGhpZGUoKSB7XG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlICFpbXBvcnRhbnQ7XG4vLyAgICAgaGVpZ2h0OiAxcHg7IHdpZHRoOiAxcHg7IFxuLy8gICAgIG92ZXJmbG93OiBoaWRkZW47XG4vLyAgICAgY2xpcDogcmVjdCgxcHggMXB4IDFweCAxcHgpOyAvKiBJRTYsIElFNyAqL1xuLy8gICAgIGNsaXA6IHJlY3QoMXB4LCAxcHgsIDFweCwgMXB4KTtcbi8vIH1cblxuLmgtc21hbGwtdXAge1xuICBAaW5jbHVkZSBicmVhaygkc21hbGwtYnJlYWspIHtcbiAgICBkaXNwbGF5OiBub25lIWltcG9ydGFudDtcbiAgfVxufVxuXG4uaC1tZWQtdXAge1xuICBAaW5jbHVkZSBicmVhaygkbWVkLWJyZWFrKSB7XG4gICAgZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLmgtbGFyZ2UtdXAge1xuICBAaW5jbHVkZSBicmVhaygkbGFyZ2UtYnJlYWspIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5oLXNtYWxsLWRvd24ge1xuICBAaW5jbHVkZSBicmVhay1tYXgoJHNtYWxsLWJyZWFrKSB7IFxuICAgIGRpc3BsYXk6IG5vbmUhaW1wb3J0YW50O1xuICB9XG59XG5cbi5oLW1lZC1kb3duIHtcbiAgQGluY2x1ZGUgYnJlYWstbWF4KCRtZWQtYnJlYWspIHsgXG4gICAgZGlzcGxheTogbm9uZSFpbXBvcnRhbnQ7XG4gIH1cbn1cblxuLmgtbGFyZ2UtZG93biB7XG4gIEBpbmNsdWRlIGJyZWFrLW1heCgkbGFyZ2UtYnJlYWspIHsgXG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuIiwiLy8gLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbi8vICAgICAjSEVMUEVSU1xuLy8gXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8gLmwtI3suLi59IGFyZSBmb3IgTEFZT1VUIHNwZWNpZmljIGhlbHBlcnNcbi8vIC50LSN7Li4ufSBhcmUgZm9yIFRFWFQgc3BlY2lmaWMgaGVscGVyc1xuLy8gLmgtI3suLi59IGFyZSBmb3IgSElEREVOIHNwZWNpZmljIGhlbHBlcnNcblxuXG5AZWFjaCAkcHJvZmlsZSwgJGNvbG9yIGluICRwYWxldHRlIHtcbiAgLmwtI3skcHJvZmlsZX0geyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IgIWltcG9ydGFudDsgfVxuICAubC0jeyRwcm9maWxlfS0taG92ZXI6aG92ZXIgeyBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3IgIWltcG9ydGFudDsgfVxuICAudC0jeyRwcm9maWxlfSB7IGNvbG9yOiAkY29sb3IgIWltcG9ydGFudDsgfVxuICAudC0jeyRwcm9maWxlfS0taG92ZXI6aG92ZXIgeyBjb2xvcjogJGNvbG9yICFpbXBvcnRhbnQ7IH1cbiAgLmYtI3skcHJvZmlsZX0gc3ZnIHsgZmlsbDogJGNvbG9yICFpbXBvcnRhbnQ7IH1cbiAgLmYtI3skcHJvZmlsZX0tLWhvdmVyOmhvdmVyIHN2ZyB7IGZpbGw6ICRjb2xvciAhaW1wb3J0YW50OyB9XG59XG5cbi50LWFsaWduLWNlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmwtY2VudGVyIHtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLmwtY2xlYXIge1xuICBjbGVhcjogYm90aDtcbn1cblxuLmwtY2Yge1xuICAqem9vbTogMTtcbiAgJjpiZWZvcmUsICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICB9XG4gICY6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi5sLXBhZGRpbmcge1xuICBwYWRkaW5nOiAkYmFzZS1zcGFjaW5nLXVuaXQ7XG59XG5cbi5sLW1hcmdpbi10b3Age1xuICBtYXJnaW4tdG9wOiAkYmFzZS1zcGFjaW5nLXVuaXQgIWltcG9ydGFudDtcbn1cblxuLmwtbWFyZ2luLXRvcC0tbm9uZSB7XG4gIG1hcmdpbi10b3A6IDAgIWltcG9ydGFudDtcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */