@charset "UTF-8";
/*------------------------------------*    #PULLING IN CONTENTS
\*------------------------------------*/
/**
 * #SETTINGS
 */
/*!
 * CTC - COTTON THOMPSON COLE
 * Author: Will Russell, 
 *         Ragged Edge
 */
/*------------------------------------*  #GLOBAL TOOLS
\*------------------------------------*/
/*------------------------------------*  #GLOBAL
\*------------------------------------*/
/*------------------------------------*   #SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * #TOOLS
 */
/*------------------------------------*    #FUNCTIONS
\*------------------------------------*/
/*  #Font face mixin
--------------------------------------*/
/*  #Responsive breakpoints mixin
--------------------------------------*/
/*  #Size helper
--------------------------------------*/
/*  #placeholder helper
--------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 0; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

input[type="number"] {
  width: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

textarea {
  resize: vertical; }

@media screen {
  [hidden~="screen"] {
    display: inherit; }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0) !important;
    position: absolute !important; } }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

ul, ol {
  padding-left: 1.25rem; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre,
.l-margin-top {
  margin-top: 1.25rem; }

/**
 * #BASE
 */
/*------------------------------------*    #PAGE
\*------------------------------------*/
@font-face {
  font-family: FaktPro-Blond;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/FaktPro-Blond.otf") format("opentype"); }

@font-face {
  font-family: FaktPro-Medium;
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/FaktPro-Medium.otf") format("opentype"); }

.headings-font {
  font-family: "Imperial", sans-serif; }

.body-font {
  font-family: "FaktPro-Blond", "aktiv-grotesk-std", sans-serif; }

.body-font--bold {
  font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif; }

/*------------------------------------*  #PAGE
\*------------------------------------*/
html {
  background-color: white;
  color: black;
  overflow-y: scroll;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed; }
  @media screen and (min-width: 103.75em) {
    html {
      font-size: 125%; } }

body {
  font-family: "FaktPro-Blond", "aktiv-grotesk-std", sans-serif;
  font-weight: 400; }

/*------------------------------------*  #TYPE
\*------------------------------------*/
/**
 * Headings 1–6.
 */
h1, .t-alpha,
input[type="submit"],
h2, .t-beta,
label,
h3, .t-gamma,
h4, .t-delta,
h5, .t-epsilon,
h6, .t-zeta,
.t-lede, input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif;
  font-weight: normal;
  text-rendering: optimizeLegibility; }

h1, .t-alpha, input[type="submit"] {
  font-size: 1.4375rem;
  line-height: 1.875rem;
  letter-spacing: -0.01em; }
  @media screen and (min-width: 50em) {
    h1, .t-alpha, input[type="submit"] {
      font-size: 2.5rem;
      line-height: 2.875rem; } }

h2, .t-beta,
label,
h3, .t-gamma {
  font-size: 1.0625rem;
  line-height: 1.5625rem;
  letter-spacing: -0.01em; }
  @media screen and (min-width: 50em) {
    h2, .t-beta,
    label,
    h3, .t-gamma {
      font-size: 1.5rem;
      line-height: 1.75rem; } }

h3, .t-gamma {
  font-family: "FaktPro-Blond", "aktiv-grotesk-std", sans-serif; }

.t-lede, input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  font-family: "Imperial", sans-serif;
  font-size: 1.5rem;
  line-height: 1.875rem;
  letter-spacing: -0.005em; }
  @media screen and (min-width: 50em) {
    .t-lede, input[type="text"],
    input[type="email"],
    input[type="tel"],
    textarea {
      font-size: 2.9375rem;
      line-height: 3.75rem; } }
  .t-lede a, input[type="text"] a,
  input[type="email"] a,
  input[type="tel"] a,
  textarea a {
    font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif;
    font-size: 1.5625rem;
    letter-spacing: -0.01em; }
    @media screen and (min-width: 50em) {
      .t-lede a, input[type="text"] a,
      input[type="email"] a,
      input[type="tel"] a,
      textarea a {
        font-size: 3rem; } }

/**
 * Paragraphs.
 */
p {
  font-size: 0.875rem;
  line-height: 1.25rem; }
  @media screen and (min-width: 50em) {
    p {
      font-size: 1.0625rem;
      line-height: 1.5rem; } }

/**
 * Emboldened elements.
 */
strong, b, em, dt {
  font-family: "FaktPro-Medium", "aktiv-grotesk-std", sans-serif;
  font-weight: normal; }

/**
 * Horizontal rules.
 */
hr {
  border: none;
  border-top: 0.0625rem solid black; }

/*------------------------------------*    #LINKS
\*------------------------------------*/
a {
  color: inherit; }
  a,
  a:hover,
  a:active,
  a:focus {
    text-decoration: none; }

p a, .t-lede a, input[type="text"] a,
input[type="email"] a,
input[type="tel"] a,
textarea a, h1 a,
.t-alpha a, input[type="submit"] a, h2 a,
.t-beta a,
label a,
h3 a,
.t-gamma a {
  /**
  * Layers multple text-shadows on top of 
  * each other steching outwards horizontally.
  **/
  color: black;
  background-color: transparent;
  background-image: -webkit-linear-gradient(black, black), -webkit-linear-gradient(black, black), -webkit-linear-gradient(black, black);
  background-image: linear-gradient(black, black), linear-gradient(black, black), linear-gradient(black, black);
  /**
  * Use ems instead of pixel if you want 
  * the underline height to be responsive 
  * to font-size.
  **/
  background-size: 0.05em 0.0625rem, 0.05em 0.0625rem, 0.0625rem 0.0625rem;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 0.90625em, 100% 0.90625em, 0% 0.90625em; }
  .lt-ie9 p a, p .lt-ie9 a, .lt-ie9 .t-lede a, .t-lede .lt-ie9 a, .lt-ie9 input[type="text"] a, input[type="text"] .lt-ie9 a,
  .lt-ie9 input[type="email"] a, input[type="email"] .lt-ie9 a,
  .lt-ie9 input[type="tel"] a, input[type="tel"] .lt-ie9 a,
  .lt-ie9 textarea a, textarea .lt-ie9 a, .lt-ie9 h1 a, h1 .lt-ie9 a,
  .lt-ie9 .t-alpha a, .t-alpha .lt-ie9 a, .lt-ie9 input[type="submit"] a, input[type="submit"] .lt-ie9 a, .lt-ie9 h2 a, h2 .lt-ie9 a,
  .lt-ie9 .t-beta a, .t-beta .lt-ie9 a,
  .lt-ie9 label a, label .lt-ie9 a,
  .lt-ie9 h3 a, h3 .lt-ie9 a,
  .lt-ie9 .t-gamma a, .t-gamma .lt-ie9 a {
    background-image: none;
    text-decoration: underline; }
  @media screen and (min-width: 50em) {
    p a:hover, .t-lede a:hover, input[type="text"] a:hover,
    input[type="email"] a:hover,
    input[type="tel"] a:hover,
    textarea a:hover, h1 a:hover,
    .t-alpha a:hover, input[type="submit"] a:hover, h2 a:hover,
    .t-beta a:hover,
    label a:hover,
    h3 a:hover,
    .t-gamma a:hover {
      border: none !important;
      background-image: -webkit-linear-gradient(#0000cc, #0000cc), -webkit-linear-gradient(#0000cc, #0000cc), -webkit-linear-gradient(#0000cc, #0000cc);
      background-image: linear-gradient(#0000cc, #0000cc), linear-gradient(#0000cc, #0000cc), linear-gradient(#0000cc, #0000cc);
      background-size: 0.05em 0.11875em, 0.05em 0.11875em, 0.11875em 0.11875em; } }

@media screen and (min-width: 50em) {
  .t-lede a, input[type="text"] a,
  input[type="email"] a,
  input[type="tel"] a,
  textarea a {
    background-position: 0% 0.84375em, 100% 0.84375em, 0% 0.84375em; }
    .t-lede a:hover, input[type="text"] a:hover,
    input[type="email"] a:hover,
    input[type="tel"] a:hover,
    textarea a:hover {
      background-size: 0.05em 0.08438em, 0.05em 0.08438em, 0.08438em 0.08438em; } }

@media screen and (min-width: 50em) {
  h1 a,
  .t-alpha a, input[type="submit"] a {
    background-position: 0% 0.875em, 100% 0.875em, 0% 0.875em; }
    h1 a:hover,
    .t-alpha a:hover, input[type="submit"] a:hover {
      background-size: 0.05em 0.08438em, 0.05em 0.08438em, 0.08438em 0.08438em; } }

@media screen and (min-width: 50em) {
  h2 a,
  .t-beta a,
  label a,
  h3 a,
  .t-gamma a {
    background-position: 0% 0.875em, 100% 0.875em, 0% 0.875em; }
    h2 a:hover,
    .t-beta a:hover,
    label a:hover,
    h3 a:hover,
    .t-gamma a:hover {
      background-size: 0.05em 0.08438em, 0.05em 0.08438em, 0.08438em 0.08438em; } }

::-moz-selection {
  text-shadow: none;
  background: #0000cc;
  color: #fff; }

::selection {
  text-shadow: none;
  background: #0000cc;
  color: #fff; }

/*------------------------------------*    #GRID
\*------------------------------------*/
.grid {
  list-style: none;
  margin: 1.25rem 0 0 -1.25rem;
  padding: 0;
  text-align: left;
  font-size: 0; }
  @media screen and (min-width: 30em) {
    .grid {
      margin-top: 0; }
      .grid.grid--noMargins {
        margin: 1.25rem 0 0 0; } }

[class*="col--"] {
  display: inline-block;
  margin-top: 1.25rem;
  padding-left: 1.25rem;
  vertical-align: top;
  width: 100%;
  font-size: medium;
  font-size: initial;
  text-align: left; }
  [class*="col--"] img {
    width: 100%; }
  .grid--noMargins > [class*="col--"] {
    margin-top: 0; }
  @media screen and (min-width: 30em) {
    .grid--noMargins > [class*="col--"] {
      margin-top: 0;
      padding-left: 0; } }

@media screen and (min-width: 30em) {
  .col--1 {
    width: 8.33333%; } }

@media screen and (min-width: 30em) {
  .col--2 {
    width: 16.66667%; } }

@media screen and (min-width: 30em) {
  .col--3 {
    width: 25%; } }

@media screen and (min-width: 30em) {
  .col--4 {
    width: 33.33333%; } }

@media screen and (min-width: 30em) {
  .col--5 {
    width: 41.66667%; } }

@media screen and (min-width: 30em) {
  .col--6 {
    width: 50%; } }

@media screen and (min-width: 30em) {
  .col--7 {
    width: 58.33333%; } }

@media screen and (min-width: 30em) {
  .col--8 {
    width: 66.66667%; } }

@media screen and (min-width: 30em) {
  .col--9 {
    width: 75%; } }

@media screen and (min-width: 30em) {
  .col--10 {
    width: 83.33333%; } }

@media screen and (min-width: 30em) {
  .col--11 {
    width: 91.66667%; } }

@media screen and (min-width: 30em) {
  .col--12 {
    width: 100%; } }

@media screen and (min-width: 30em) {
  .col--fix1 {
    width: 6.25rem; } }

@media screen and (min-width: 30em) {
  .col--fix2 {
    width: 12.5rem; } }

@media screen and (min-width: 30em) {
  .col--fix3 {
    width: 18.75rem; } }

@media screen and (min-width: 30em) {
  .col--fix4 {
    width: 25rem; } }

@media screen and (min-width: 30em) {
  .col--fix5 {
    width: 31.25rem; } }

@media screen and (min-width: 30em) {
  .col--fix6 {
    width: 37.5rem; } }

@media screen and (min-width: 30em) {
  .col--fix7 {
    width: 43.75rem; } }

@media screen and (min-width: 30em) {
  .col--fix8 {
    width: 50rem; } }

@media screen and (min-width: 30em) {
  .col--fix9 {
    width: 56.25rem; } }

@media screen and (min-width: 30em) {
  .col--fix10 {
    width: 62.5rem; } }

@media screen and (min-width: 30em) {
  .col--fix11 {
    width: 68.75rem; } }

@media screen and (min-width: 30em) {
  .col--fix12 {
    width: 75rem; } }

.col--stack {
  width: 100%; }
  @media screen and (min-width: 30em) {
    .col--stack {
      width: 50%; } }
  @media screen and (min-width: 50em) {
    .col--stack {
      width: 33.333333%; } }

.grid--full {
  margin-left: 0; }
  .grid--full > [class*="col--"] {
    padding-left: 0; }

.grid--rev {
  direction: rtl;
  text-align: left; }
  .grid--rev > [class*="col--"] {
    direction: ltr;
    text-align: left; }

.grid--middle > [class*="col--"] {
  vertical-align: middle; }

.grid--bottom > [class*="col--"] {
  vertical-align: bottom; }

.grid--right {
  text-align: right; }
  .grid--right > [class*="col--"] {
    text-align: left; }

.grid--center {
  text-align: center; }
  .grid--center > [class*="col--"] {
    text-align: left; }

/*------------------------------------*    #FORMS
\*------------------------------------*/
::-webkit-input-placeholder {
  color: #999999; }

:-moz-placeholder {
  color: #999999; }

::-moz-placeholder {
  color: #999999; }

:-ms-input-placeholder {
  color: #999999; }

form {
  position: relative;
  margin: 0 auto; }

.field {
  margin-top: 1.25rem; }
  .field + .field {
    margin-top: 3.75rem; }

input[type="text"],
input[type="email"],
input[type="tel"],
textarea {
  font-family: "Imperial", sans-serif;
  background: transparent;
  border: 0;
  border-bottom: 0.0625rem solid black;
  border-radius: 0;
  color: #0000cc;
  max-width: 42.5rem;
  width: 100%;
  padding: 0;
  margin-top: 1.25rem;
  -webkit-transition: .2s ease;
          transition: .2s ease;
  -webkit-appearance: none;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }
  input[type="text"]:focus,
  input[type="email"]:focus,
  input[type="tel"]:focus,
  textarea:focus {
    outline: none; }
  input[type="text"].is-valid,
  input[type="email"].is-valid,
  input[type="tel"].is-valid,
  textarea.is-valid {
    border-bottom: 0.125rem solid green; }
  input[type="text"].is-error,
  input[type="email"].is-error,
  input[type="tel"].is-error,
  textarea.is-error {
    border-bottom: 0.125rem solid red; }
  input[type="text"]:disabled,
  input[type="email"]:disabled,
  input[type="tel"]:disabled,
  textarea:disabled {
    opacity: .5;
    cursor: default; }

textarea {
  border: 0.0625rem solid black;
  padding: 0.625rem;
  height: 12.5rem; }

label {
  display: block; }

/*  #Radio and Checkbox Inputs
--------------------------------------*/
input[type="radio"],
input[type="checkbox"] {
  display: block;
  position: absolute;
  opacity: 0; }
  input[type="radio"] + label,
  input[type="checkbox"] + label {
    position: relative;
    display: inline-block;
    padding: 0.3125rem 0 0 3.125rem;
    cursor: pointer;
    color: #666666;
    text-transform: none;
    font-weight: normal; }
    input[type="radio"] + label:after,
    input[type="radio"] + label:before,
    input[type="checkbox"] + label:after,
    input[type="checkbox"] + label:before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 1.875rem;
      height: 1.875rem; }
    input[type="radio"] + label:before,
    input[type="checkbox"] + label:before {
      -webkit-transition: .2s ease;
              transition: .2s ease;
      -webkit-transform: scale(0);
          -ms-transform: scale(0);
              transform: scale(0); }
    input[type="radio"] + label:after,
    input[type="checkbox"] + label:after {
      background: transparent;
      border: 0.0625rem solid #0000cc; }
  input[type="radio"]:checked + label:before,
  input[type="checkbox"]:checked + label:before {
    -webkit-transform: scale(1);
        -ms-transform: scale(1);
            transform: scale(1); }
  input[type="radio"]:disabled + label,
  input[type="checkbox"]:disabled + label {
    opacity: .5; }

input[type="radio"] + label:before {
  border-radius: 50%;
  border: 0.625rem solid white;
  background: #0000cc; }

input[type="radio"] + label:after {
  border-radius: 50%;
  border-width: 0.125rem; }

input[type="checkbox"] + label:before {
  border: 0.625rem solid white;
  background: #0000cc; }

input[type="checkbox"] + label:after {
  border-width: 0.125rem; }

/**
 * #OBJECTS
 */
/*------------------------------------*  #PAGE LOADER
\*------------------------------------*/
.switch-trans {
  -webkit-transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  .switch-trans:nth-child(1) {
    -webkit-transition-delay: 65ms;
            transition-delay: 65ms; }
  .switch-trans:nth-child(2) {
    -webkit-transition-delay: 130ms;
            transition-delay: 130ms; }
  .switch-trans:nth-child(3) {
    -webkit-transition-delay: 195ms;
            transition-delay: 195ms; }
  .switch-trans:nth-child(4) {
    -webkit-transition-delay: 260ms;
            transition-delay: 260ms; }
  .switch-trans:nth-child(5) {
    -webkit-transition-delay: 325ms;
            transition-delay: 325ms; }
  .switch-trans:nth-child(6) {
    -webkit-transition-delay: 390ms;
            transition-delay: 390ms; }
  .switch-trans:nth-child(7) {
    -webkit-transition-delay: 455ms;
            transition-delay: 455ms; }
  .switch-trans:nth-child(8) {
    -webkit-transition-delay: 520ms;
            transition-delay: 520ms; }
  .switch-trans:nth-child(9) {
    -webkit-transition-delay: 585ms;
            transition-delay: 585ms; }
  .switch-trans:nth-child(10) {
    -webkit-transition-delay: 650ms;
            transition-delay: 650ms; }
  .switch-trans.switch-trans-in {
    opacity: 0;
    -webkit-transform: translate3d(0, 2.5rem, 0);
            transform: translate3d(0, 2.5rem, 0); }
    .switch-trans.switch-trans-in.switch-trans-out {
      opacity: 1;
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); }

/*------------------------------------*  #WRAPPERS
\*------------------------------------*/
.wrapper {
  max-width: 78.75em;
  margin: 0 auto;
  padding-right: 1.25rem;
  padding-left: 1.25rem; }
  @media screen and (min-width: 50em) {
    .wrapper {
      padding-right: 2.5rem;
      padding-left: 2.5rem; } }

/*------------------------------------*  #BUTTONS
\*------------------------------------*/
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 0.6875em 3.125em 0.675em 3.125em;
  /* [7] */
  max-width: 23.75rem;
  background-color: black;
  border: none;
  /* [4] */
  border-radius: 0;
  font-size: 2.75rem;
  line-height: 3.5rem; }
  .btn,
  .btn:hover,
  .btn:active,
  .btn:focus {
    text-decoration: none;
    /* [4] */
    color: white; }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

.perspective {
  display: inline-block;
  position: relative;
  z-index: 1;
  -webkit-perspective: 800px;
          perspective: 800px; }

.btn--3d {
  position: relative;
  outline: 0.0625rem solid transparent;
  -webkit-transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
  -webkit-tap-highlight-color: transparent;
  -webkit-transform-style: preserve-3d;
          transform-style: preserve-3d; }
  .btn--3d::before {
    content: 'Do it!';
    width: 100%;
    height: 100%;
    position: absolute;
    top: 100%;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;
    background: #0000cc;
    -webkit-transform-origin: 0% 0%;
        -ms-transform-origin: 0% 0%;
            transform-origin: 0% 0%;
    -webkit-transform: rotateX(-90deg);
            transform: rotateX(-90deg); }
  .btn--3d:hover {
    -webkit-transform-origin: 50% 0%;
        -ms-transform-origin: 50% 0%;
            transform-origin: 50% 0%;
    -webkit-transform: rotateX(90deg) translateY(-100%);
            transform: rotateX(90deg) translateY(-100%); }

/**
 * #COMPONENTS
 */
/*------------------------------------*  #HEADER
\*------------------------------------*/
.ocn-switch {
  display: none;
  position: fixed;
  top: 0;
  right: 0;
  width: 5rem;
  height: 5rem;
  background: #0000cc;
  z-index: 100;
  -webkit-transition: .2s ease;
          transition: .2s ease; }
  .ocn-show-right .ocn-switch {
    background: black; }

.ocn {
  background: #0000cc; }
  @media screen and (min-width: 50em) {
    .ocn {
      background: none; } }
  .ocn ul {
    margin: 0;
    padding: 0;
    list-style: none;
    font-size: 0; }
  .ocn li {
    font-size: medium;
    font-size: initial; }

.ocn__list__item {
  -webkit-transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
          transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  @media screen and (min-width: 50em) {
    .ocn__list__item {
      display: inline-block;
      padding: 0 1.25rem;
      border-bottom: 0.0625rem solid black; }
      .ocn__list__item.is--active {
        border-bottom: 0.25rem solid #0000cc; } }

.ocn__list a {
  display: block;
  width: 100%;
  padding: 1.25rem; }

@media screen and (max-width: 49.9375em) {
  .ocn-switch {
    display: block; }
  .ocn {
    display: none;
    position: fixed;
    top: 0;
    bottom: 0;
    left: auto;
    right: auto;
    overflow: auto; }
  .site__inner,
  .ocn {
    -webkit-transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
            transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86); }
  .ocn {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
    -webkit-transform: translateZ(0);
            transform: translateZ(0);
    z-index: 1; }
  .site__inner {
    opacity: 1; }
  .ocn {
    right: 0;
    width: 100%;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0); }
  .ocn__list {
    -webkit-transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
            transition: 165ms cubic-bezier(0.785, 0.135, 0.15, 0.86);
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .ocn-show-right .site__inner {
    -webkit-transform: translate3d(-50%, 0, 0);
            transform: translate3d(-50%, 0, 0); }
  .ocn-show-right .ocn {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .ocn-show-right .ocn__list {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .is--visible {
    display: block; } }

/**
 * #THEMES
 */
.styleguide {
  margin-top: 5rem;
  margin-bottom: 6.25rem; }
  .styleguide .sg-subheading {
    margin-top: 0;
    font-size: 30px; }
  .styleguide .sg-title {
    font-size: 18px;
    line-height: 26px;
    color: #0000cc;
    border-bottom: 1px solid #666666;
    margin-top: 6.25rem; }
  .styleguide h1 + .sg-title {
    margin-top: 1.25rem; }
  .styleguide .sg-heading {
    margin-top: 6.25rem; }

.palette {
  margin: 1.25rem 0 0;
  padding: 0; }

.palette__item {
  display: inline-block;
  margin: 0 2%; }

.palette__circle {
  display: block;
  width: 9.375rem;
  height: 9.375rem;
  border-radius: 50%; }
  .palette__circle--border {
    border: 0.0625rem solid #666666; }

.palette__title {
  display: block; }

/**
 * #TRUMPS
 */
/*------------------------------------*    #SHOW-HIDE
\*------------------------------------*/
@media screen and (min-width: 30em) {
  .h-small-up {
    display: none !important; } }

@media screen and (min-width: 50em) {
  .h-med-up {
    display: none !important; } }

@media screen and (min-width: 78.75em) {
  .h-large-up {
    display: none; } }

@media screen and (max-width: 29.9375em) {
  .h-small-down {
    display: none !important; } }

@media screen and (max-width: 49.9375em) {
  .h-med-down {
    display: none !important; } }

@media screen and (max-width: 78.6875em) {
  .h-large-down {
    display: none; } }

.l-blue {
  background-color: #0000cc !important; }

.l-blue--hover:hover {
  background-color: #0000cc !important; }

.t-blue {
  color: #0000cc !important; }

.t-blue--hover:hover {
  color: #0000cc !important; }

.f-blue svg {
  fill: #0000cc !important; }

.f-blue--hover:hover svg {
  fill: #0000cc !important; }

.l-white {
  background-color: white !important; }

.l-white--hover:hover {
  background-color: white !important; }

.t-white {
  color: white !important; }

.t-white--hover:hover {
  color: white !important; }

.f-white svg {
  fill: white !important; }

.f-white--hover:hover svg {
  fill: white !important; }

.l-grey {
  background-color: #666666 !important; }

.l-grey--hover:hover {
  background-color: #666666 !important; }

.t-grey {
  color: #666666 !important; }

.t-grey--hover:hover {
  color: #666666 !important; }

.f-grey svg {
  fill: #666666 !important; }

.f-grey--hover:hover svg {
  fill: #666666 !important; }

.l-grey--light {
  background-color: #999999 !important; }

.l-grey--light--hover:hover {
  background-color: #999999 !important; }

.t-grey--light {
  color: #999999 !important; }

.t-grey--light--hover:hover {
  color: #999999 !important; }

.f-grey--light svg {
  fill: #999999 !important; }

.f-grey--light--hover:hover svg {
  fill: #999999 !important; }

.l-grey--lightest {
  background-color: #eeeeee !important; }

.l-grey--lightest--hover:hover {
  background-color: #eeeeee !important; }

.t-grey--lightest {
  color: #eeeeee !important; }

.t-grey--lightest--hover:hover {
  color: #eeeeee !important; }

.f-grey--lightest svg {
  fill: #eeeeee !important; }

.f-grey--lightest--hover:hover svg {
  fill: #eeeeee !important; }

.l-black {
  background-color: black !important; }

.l-black--hover:hover {
  background-color: black !important; }

.t-black {
  color: black !important; }

.t-black--hover:hover {
  color: black !important; }

.f-black svg {
  fill: black !important; }

.f-black--hover:hover svg {
  fill: black !important; }

.t-align-center {
  text-align: center; }

.l-center {
  margin-left: auto;
  margin-right: auto; }

.l-clear {
  clear: both; }

.l-cf, .palette {
  *zoom: 1; }
  .l-cf:before, .palette:before, .l-cf:after, .palette:after {
    content: " ";
    display: table; }
  .l-cf:after, .palette:after {
    clear: both; }

.l-padding {
  padding: 1.25rem; }

.l-margin-top {
  margin-top: 1.25rem !important; }

.l-margin-top--none {
  margin-top: 0 !important; }

/*# sourceMappingURL=data:application/json;base64, */